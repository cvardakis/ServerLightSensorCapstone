{"map":"{\"version\":3,\"sources\":[\"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/SensorStatus.js\",\"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/Header.js\",\"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/App.js\",\"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/reportWebVitals.js\",\"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/index.js\"],\"names\":[\"SensorStatus\",\"status\",\"setStatus\",\"useState\",\"latestMeasurement\",\"setLatestMeasurement\",\"console\",\"log\",\"useEffect\",\"fetch\",\"then\",\"res\",\"json\",\"data\",\"timestamp\",\"reportedTime\",\"Date\",\"diffMinutes\",\"error\",\"catch\",\"err\",\"React\",\"createElement\",\"style\",\"background\",\"color\",\"padding\",\"value\",\"toLocaleString\",\"Header\",\"menuOpen\",\"setMenuOpen\",\"className\",\"onClick\",\"toggleMenu\",\"prev\",\"href\",\"App\",\"margin\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"e\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"// src/SensorStatus.js\\nimport React, { useState, useEffect } from 'react';\\n\\nfunction SensorStatus() {\\n    const [status, setStatus] = useState(null);\\n    const [latestMeasurement, setLatestMeasurement] = useState(null);\\n    console.log(\\\"Getting status...\\\");\\n\\n    useEffect(() => {\\n        // Adjust the URL if needed, e.g., http://localhost:8000/sensorData/latest\\n        fetch('http://localhost:8000/sensorData/latest')\\n            .then((res) => {\\n                console.log(\\\"Response status:\\\", res.status);\\n                return res.json();\\n            })\\n            .then((data) => {\\n                console.log(\\\"Fetched sensor data:\\\", data);\\n                setLatestMeasurement(data);\\n\\n                // Check if data contains a valid timestamp\\n                if (data && data.timestamp) {\\n                    const reportedTime = new Date(data.timestamp);\\n                    const now = new Date();\\n                    const diffMinutes = (now - reportedTime) / 1000 / 60;\\n                    console.log(\\\"Time difference in minutes:\\\", diffMinutes);\\n                    setStatus(diffMinutes <= 10 ? 'online' : 'offline');\\n                } else {\\n                    console.error(\\\"No valid timestamp in data:\\\", data);\\n                }\\n            })\\n            .catch((err) => console.error('Error fetching sensor status:', err));\\n    }, []);\\n\\n    return (\\n        <div>\\n            <h2>Sensor Status</h2>\\n            <button\\n                style={{\\n                    background: status === 'online' ? 'green' : 'red',\\n                    color: 'white',\\n                    padding: '10px',\\n                }}\\n            >\\n                {status ? (status === 'online' ? 'Online' : 'Offline') : 'Loading...'}\\n            </button>\\n            {latestMeasurement && (\\n                <div>\\n                    <p>\\n                        <strong>Latest Measurement:</strong> {latestMeasurement.value} mag/arcsec<sup>2</sup>\\n                    </p>\\n                    <p>\\n                        <strong>Timestamp:</strong>{' '}\\n                        {new Date(latestMeasurement.timestamp).toLocaleString()}\\n                    </p>\\n                </div>\\n            )}\\n        </div>\\n    );\\n}\\n\\nexport default SensorStatus;\\n\",\"import React, { useState } from 'react';\\nimport './Header.css';\\n\\nconst Header = () => {\\n    const [menuOpen, setMenuOpen] = useState(false);\\n\\n    const toggleMenu = () => {\\n        setMenuOpen(prev => !prev);\\n    };\\n\\n    return (\\n        <header className=\\\"header\\\">\\n            <div className=\\\"logo\\\">Night Sky Sensor</div>\\n            <div className=\\\"menu-icon\\\" onClick={toggleMenu}>\\n                &#9776;\\n            </div>\\n            <nav className={`nav ${menuOpen ? 'open' : ''}`}>\\n                <ul>\\n                    <li><a href=\\\"/\\\">Home</a></li>\\n                    <li><a href=\\\"/about\\\">About</a></li>\\n                    <li><a href=\\\"/data\\\">Data</a></li>\\n                </ul>\\n            </nav>\\n        </header>\\n    );\\n};\\n\\nexport default Header;\\n\",\"// src/App.js\\nimport React from 'react';\\nimport SensorStatus from './SensorStatus';\\nimport Header from './Header';\\n\\n// import SensorGraph from './SensorGraph';\\n\\nfunction App() {\\n    return (\\n    <div className=\\\"App\\\" style={{padding: '20px'}}>\\n        <Header/>\\n        <h1>Sensor Dashboard</h1>\\n        <SensorStatus/>\\n        <hr style={{margin: '20px 0'}}/>\\n        {/*<SensorGraph />*/}\\n    </div>\\n)\\n    ;\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,n){},14:function(e,t,n){},15:function(e,t,n){\"use strict\";n.r(t);var a=n(0),l=n.n(a),r=n(3),c=n.n(r);n(13);var o=function(){const[e,t]=Object(a.useState)(null),[n,r]=Object(a.useState)(null);return console.log(\"Getting status...\"),Object(a.useEffect)(()=>{fetch(\"http://localhost:8000/sensorData/latest\").then(e=>(console.log(\"Response status:\",e.status),e.json())).then(e=>{if(console.log(\"Fetched sensor data:\",e),r(e),e&&e.timestamp){const n=new Date(e.timestamp),a=(new Date-n)/1e3/60;console.log(\"Time difference in minutes:\",a),t(a<=10?\"online\":\"offline\")}else console.error(\"No valid timestamp in data:\",e)}).catch(e=>console.error(\"Error fetching sensor status:\",e))},[]),l.a.createElement(\"div\",null,l.a.createElement(\"h2\",null,\"Sensor Status\"),l.a.createElement(\"button\",{style:{background:\"online\"===e?\"green\":\"red\",color:\"white\",padding:\"10px\"}},e?\"online\"===e?\"Online\":\"Offline\":\"Loading...\"),n&&l.a.createElement(\"div\",null,l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,\"Latest Measurement:\"),\" \",n.value,\" mag/arcsec\",l.a.createElement(\"sup\",null,\"2\")),l.a.createElement(\"p\",null,l.a.createElement(\"strong\",null,\"Timestamp:\"),\" \",new Date(n.timestamp).toLocaleString())))};n(14);var s=()=>{const[e,t]=Object(a.useState)(!1);return l.a.createElement(\"header\",{className:\"header\"},l.a.createElement(\"div\",{className:\"logo\"},\"Night Sky Sensor\"),l.a.createElement(\"div\",{className:\"menu-icon\",onClick:()=>{t(e=>!e)}},\"\\u2630\"),l.a.createElement(\"nav\",{className:`nav ${e?\"open\":\"\"}`},l.a.createElement(\"ul\",null,l.a.createElement(\"li\",null,l.a.createElement(\"a\",{href:\"/\"},\"Home\")),l.a.createElement(\"li\",null,l.a.createElement(\"a\",{href:\"/about\"},\"About\")),l.a.createElement(\"li\",null,l.a.createElement(\"a\",{href:\"/data\"},\"Data\")))))};var u=function(){return l.a.createElement(\"div\",{className:\"App\",style:{padding:\"20px\"}},l.a.createElement(s,null),l.a.createElement(\"h1\",null,\"Sensor Dashboard\"),l.a.createElement(o,null),l.a.createElement(\"hr\",{style:{margin:\"20px 0\"}}))};var m=e=>{e&&e instanceof Function&&n.e(3).then(n.bind(null,16)).then(t=>{let{getCLS:n,getFID:a,getFCP:l,getLCP:r,getTTFB:c}=t;n(e),a(e),l(e),r(e),c(e)})};c.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(u,null))),m()},4:function(e,t,n){e.exports=n(15)}},[[4,1,2]]]);","extractedComments":[]}