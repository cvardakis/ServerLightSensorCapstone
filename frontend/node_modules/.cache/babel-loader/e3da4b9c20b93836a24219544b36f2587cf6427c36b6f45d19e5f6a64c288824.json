{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (!active || !payload || payload.length === 0) return null;\n  const fmt = new Intl.DateTimeFormat('en-US', {\n    hour12: false,\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  const timeLabel = fmt.format(new Date(label));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", timeLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomTooltip;\nfunction LineGraph() {\n  _s();\n  // Chart data and full raw rows\n  const [data, setData] = useState([]); // grouped for chart\n  const [rawData, setRawData] = useState([]); // full DB rows for CSV\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  // Date/time filters\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Y‑axis customization\n  const [yMin, setYMin] = useState('');\n  const [yMax, setYMax] = useState('');\n  const [yStep, setYStep] = useState(5);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Toggle sensor selection (enforce at least one)\n  const toggleSensor = sensorId => {\n    setSelectedSensors(prev => {\n      if (prev.includes(sensorId)) {\n        if (prev.length === 1) return prev;\n        return prev.filter(id => id !== sensorId);\n      }\n      return [...prev, sensorId];\n    });\n  };\n\n  /* ---------- CSV download ---------- */\n  const downloadCSV = () => {\n    if (!rawData.length) return;\n\n    /* 1️⃣  Map sensor_id ➜ sensor.name */\n    const idToName = Object.fromEntries(sensors.map(s => [s.sensor_id, s.name]));\n\n    /* 2️⃣  Build headers – rename the column */\n    const headers = Object.keys(rawData[0]).map(h => h === 'sensor_id' ? 'sensor_name' : h);\n\n    /* 3️⃣  Populate rows with name instead of id */\n    const rows = rawData.map(row => headers.map(h => {\n      var _idToName$row$sensor_;\n      return h === 'sensor_name' ? (_idToName$row$sensor_ = idToName[row.sensor_id]) !== null && _idToName$row$sensor_ !== void 0 ? _idToName$row$sensor_ : row.sensor_id // fallback to id\n      : row[h];\n    }));\n\n    /* 4️⃣  Serialize and download */\n    const csv = [headers, ...rows].map(r => r.map(c => `\"${c}\"`).join(',')).join('\\r\\n');\n    const url = URL.createObjectURL(new Blob([csv], {\n      type: 'text/csv'\n    }));\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'Utah-skyscope-data.csv';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // On mount: fetch sensors & set default filters (rounded to 5 min)\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const round5 = date => {\n      const ms = date.getTime(),\n        step = 1000 * 60 * 5;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = round5(new Date());\n    const ago12h = new Date(now.getTime() - 12 * 3600 * 1000);\n    setStartDate(`${ago12h.getFullYear()}-${pad(ago12h.getMonth() + 1)}-${pad(ago12h.getDate())}`);\n    setStartTime(`${pad(ago12h.getHours())}:${pad(ago12h.getMinutes())}`);\n    setEndDate(`${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`);\n    setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n    fetch(`${apiUrl}/sensors`).then(r => r.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // Polling fetch: get rawData, group for chart, recalc Y‑axis\n  useEffect(() => {\n    if (!initialized) return;\n    const fetchAndProcess = () => {\n      const params = new URLSearchParams();\n      if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n      if (startDate) params.append('startDate', startDate);\n      if (startTime) params.append('startTime', startTime);\n      if (endDate) params.append('endDate', endDate);\n      if (endTime) params.append('endTime', endTime);\n      fetch(`${apiUrl}/sensorData/filter?${params.toString()}`).then(r => r.json()).then(rows => {\n        setRawData(rows);\n        const grouped = {};\n        const readings = [];\n        rows.forEach(item => {\n          const ts = new Date(item.local).getTime();\n          grouped[ts] = grouped[ts] || {\n            timestamp: ts\n          };\n          grouped[ts][item.sensor_id] = parseFloat(item.reading);\n          readings.push(parseFloat(item.reading));\n        });\n        const arr = Object.values(grouped);\n        setData(arr);\n        const maxRead = readings.length ? Math.max(...readings) : 0;\n        const ceilMax = Math.ceil(maxRead / yStep) * yStep;\n        setYMin('0');\n        setYMax(ceilMax.toString());\n      }).catch(console.error);\n    };\n    fetchAndProcess();\n    const id = setInterval(fetchAndProcess, 60000);\n    return () => clearInterval(id);\n  }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n  // Start/end timestamps\n  const startTs = startDate && startTime ? new Date(`${startDate}T${startTime}`).getTime() : 0;\n  const endTs = endDate && endTime ? new Date(`${endDate}T${endTime}`).getTime() : Date.now();\n\n  // Generate X ticks on exact hours\n  const xTicks = [];\n  if (startTs < endTs) {\n    let first = new Date(startTs);\n    first.setMinutes(0, 0, 0);\n    if (first.getTime() < startTs) {\n      first = new Date(first.getTime() + 3600 * 1000);\n    }\n    for (let t = first.getTime(); t <= endTs; t += 3600 * 1000) {\n      xTicks.push(t);\n    }\n  }\n\n  // Generate Y ticks by yStep\n  const yMinNum = Number(yMin || 0);\n  const yMaxNum = Number(yMax || 0);\n  const yTicks = [];\n  for (let v = yMinNum; v <= yMaxNum; v += yStep) {\n    yTicks.push(v);\n  }\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          children: sensors.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(s.sensor_id),\n              onChange: () => toggleSensor(s.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), s.name]\n          }, s.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date and Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-selector\",\n          style: {\n            display: 'flex',\n            gap: 24,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 24,\n            marginBottom: 8,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Min\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMin,\n                onChange: e => setYMin(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Max\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMax,\n                onChange: e => setYMax(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: yStep,\n                onChange: e => setYStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"1 unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"2 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadCSV,\n          children: \"Download as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [startTs, endTs],\n          ticks: xTicks,\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMinNum, yMaxNum],\n          ticks: yTicks,\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), sensors.filter(s => selectedSensors.includes(s.sensor_id)).map((s, i) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: s.sensor_id,\n          name: s.name,\n          stroke: colors[i % colors.length],\n          dot: false\n        }, s.sensor_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"v3qJDAbVHvZOJzGIrPgqEn//i3M=\");\n_c2 = LineGraph;\nexport default LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","fmt","Intl","DateTimeFormat","hour12","month","day","hour","minute","timeLabel","format","Date","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","value","dataKey","_c","LineGraph","_s","data","setData","rawData","setRawData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","yMin","setYMin","yMax","setYMax","yStep","setYStep","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","sensorId","prev","includes","filter","id","downloadCSV","idToName","Object","fromEntries","s","sensor_id","headers","keys","h","rows","row","_idToName$row$sensor_","csv","r","c","join","url","URL","createObjectURL","Blob","type","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","pad","n","String","padStart","round5","date","ms","getTime","step","Math","floor","now","ago12h","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","json","list","catch","console","error","fetchAndProcess","params","URLSearchParams","append","toString","grouped","readings","forEach","item","ts","local","timestamp","parseFloat","reading","push","arr","values","maxRead","max","ceilMax","ceil","setInterval","clearInterval","startTs","endTs","xTicks","first","setMinutes","t","yMinNum","Number","yMaxNum","yTicks","v","colors","width","height","className","marginRight","checked","onChange","display","gap","justifyContent","e","target","alignItems","onClick","margin","top","right","bottom","left","strokeDasharray","domain","ticks","tickFormatter","toLocaleTimeString","second","position","offset","angle","dy","content","verticalAlign","i","stroke","dot","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || payload.length === 0) return null;\n    const fmt = new Intl.DateTimeFormat('en-US', {\n        hour12: false,\n        month: '2-digit',\n        day:   '2-digit',\n        hour:  '2-digit',\n        minute:'2-digit'\n    });\n    const timeLabel = fmt.format(new Date(label));\n    return (\n        <div style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '0.5rem', color: '#000' }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>Time: {timeLabel}</div>\n            {payload.map((entry) => (\n                <div key={entry.dataKey} style={{ color: entry.color, fontWeight: 'bold' }}>\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nfunction LineGraph() {\n    // Chart data and full raw rows\n    const [data, setData] = useState([]);       // grouped for chart\n    const [rawData, setRawData] = useState([]); // full DB rows for CSV\n    const [sensors, setSensors] = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n    const [initialized, setInitialized] = useState(false);\n\n    // Date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [endTime, setEndTime] = useState('');\n\n    // Y‑axis customization\n    const [yMin, setYMin] = useState('');\n    const [yMax, setYMax] = useState('');\n    const [yStep, setYStep] = useState(5);\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // Toggle sensor selection (enforce at least one)\n    const toggleSensor = (sensorId) => {\n        setSelectedSensors(prev => {\n            if (prev.includes(sensorId)) {\n                if (prev.length === 1) return prev;\n                return prev.filter(id => id !== sensorId);\n            }\n            return [...prev, sensorId];\n        });\n    };\n\n    /* ---------- CSV download ---------- */\n    const downloadCSV = () => {\n        if (!rawData.length) return;\n\n        /* 1️⃣  Map sensor_id ➜ sensor.name */\n        const idToName = Object.fromEntries(\n            sensors.map(s => [s.sensor_id, s.name])\n        );\n\n        /* 2️⃣  Build headers – rename the column */\n        const headers = Object.keys(rawData[0]).map(h =>\n            h === 'sensor_id' ? 'sensor_name' : h\n        );\n\n        /* 3️⃣  Populate rows with name instead of id */\n        const rows = rawData.map(row =>\n            headers.map(h =>\n                h === 'sensor_name'\n                    ? (idToName[row.sensor_id] ?? row.sensor_id)  // fallback to id\n                    : row[h]\n            )\n        );\n\n        /* 4️⃣  Serialize and download */\n        const csv = [headers, ...rows]\n            .map(r => r.map(c => `\"${c}\"`).join(','))\n            .join('\\r\\n');\n\n        const url = URL.createObjectURL(new Blob([csv], { type: 'text/csv' }));\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'Utah-skyscope-data.csv';\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        URL.revokeObjectURL(url);\n    };\n\n\n    // On mount: fetch sensors & set default filters (rounded to 5 min)\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = date => {\n            const ms = date.getTime(), step = 1000 * 60 * 5;\n            return new Date(Math.floor(ms / step) * step);\n        };\n        const now = round5(new Date());\n        const ago12h = new Date(now.getTime() - 12 * 3600 * 1000);\n\n        setStartDate(`${ago12h.getFullYear()}-${pad(ago12h.getMonth()+1)}-${pad(ago12h.getDate())}`);\n        setStartTime(`${pad(ago12h.getHours())}:${pad(ago12h.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Polling fetch: get rawData, group for chart, recalc Y‑axis\n    useEffect(() => {\n        if (!initialized) return;\n        const fetchAndProcess = () => {\n            const params = new URLSearchParams();\n            if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n            if (startDate) params.append('startDate', startDate);\n            if (startTime) params.append('startTime', startTime);\n            if (endDate) params.append('endDate', endDate);\n            if (endTime) params.append('endTime', endTime);\n\n            fetch(`${apiUrl}/sensorData/filter?${params.toString()}`)\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    const grouped = {};\n                    const readings = [];\n                    rows.forEach(item => {\n                        const ts = new Date(item.local).getTime();\n                        grouped[ts] = grouped[ts] || { timestamp: ts };\n                        grouped[ts][item.sensor_id] = parseFloat(item.reading);\n                        readings.push(parseFloat(item.reading));\n                    });\n                    const arr = Object.values(grouped);\n                    setData(arr);\n                    const maxRead = readings.length ? Math.max(...readings) : 0;\n                    const ceilMax = Math.ceil(maxRead / yStep) * yStep;\n                    setYMin('0');\n                    setYMax(ceilMax.toString());\n                })\n                .catch(console.error);\n        };\n\n        fetchAndProcess();\n        const id = setInterval(fetchAndProcess, 60000);\n        return () => clearInterval(id);\n    }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n    // Start/end timestamps\n    const startTs = startDate && startTime\n        ? new Date(`${startDate}T${startTime}`).getTime()\n        : 0;\n    const endTs = endDate && endTime\n        ? new Date(`${endDate}T${endTime}`).getTime()\n        : Date.now();\n\n    // Generate X ticks on exact hours\n    const xTicks = [];\n    if (startTs < endTs) {\n        let first = new Date(startTs);\n        first.setMinutes(0, 0, 0);\n        if (first.getTime() < startTs) {\n            first = new Date(first.getTime() + 3600 * 1000);\n        }\n        for (let t = first.getTime(); t <= endTs; t += 3600 * 1000) {\n            xTicks.push(t);\n        }\n    }\n\n    // Generate Y ticks by yStep\n    const yMinNum = Number(yMin || 0);\n    const yMaxNum = Number(yMax || 0);\n    const yTicks = [];\n    for (let v = yMinNum; v <= yMaxNum; v += yStep) {\n        yTicks.push(v);\n    }\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            <div className=\"menuContainer\">\n                {/* Section 1: Sensor Selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div className=\"sensor-options\">\n                        {sensors.map(s => (\n                            <label key={s.sensor_id} style={{marginRight: 12}}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n                {/* Section 2: Date & Range */}\n                <section className=\"section2\">\n                    <h4>Date and Range</h4>\n                    <div className=\"range-selector\" style={{display: 'flex', gap: 24, justifyContent: 'center'}}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)}/>\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime}\n                                       onChange={e => setStartTime(e.target.value)}/>\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime}\n                                       onChange={e => setEndTime(e.target.value)}/>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Section 3: Y‑Axis & CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n\n                    {/* Y‑axis controls in a single row */}\n                    <div style={{display: 'flex', alignItems: 'center', gap: 24, marginBottom: 8, justifyContent: 'center'}}>\n                        <div>\n                            <label>Y Min<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMin}\n                                    onChange={e => setYMin(e.target.value)}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMax}\n                                    onChange={e => setYMax(e.target.value)}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n\n                    {/* Button gets its own line */}\n                    <button onClick={downloadCSV}>Download as CSV</button>\n                </section>\n\n            </div>\n\n            {/* Chart */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={data} margin={{top: 20, right: 10, bottom: 80, left: 10}}>\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms =>\n                            new Date(ms).toLocaleTimeString('en-GB', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit',\n                            })\n                        }\n                        label={{value: 'Local Time', position: 'bottom', offset: 20, style: {fontWeight: 'bold'}}}\n                    />\n                    <YAxis\n                        domain={[yMinNum, yMaxNum]}\n                        ticks={yTicks}\n                        label={{\n                            value: 'mag/arcsec²',\n                            angle: -90,\n                            position: 'insideLeft',\n                            dy: 50,\n                            style: {fontWeight: 'bold'}\n                        }}\n                    />\n                    <Tooltip content={<CustomTooltip/>}/>\n                    <Legend verticalAlign=\"top\" />\n                    {sensors\n                        .filter(s => selectedSensors.includes(s.sensor_id))\n                        .map((s, i) => (\n                            <Line\n                                key={s.sensor_id}\n                                type=\"monotone\"\n                                dataKey={s.sensor_id}\n                                name={s.name}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                            />\n                        ))}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default LineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}