{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/SensorStatus.js\",\n  _s = $RefreshSig$();\n// src/SensorStatus.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SensorStatus() {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [latestMeasurement, setLatestMeasurement] = useState(null);\n  console.log(\"Getting status...\");\n  useEffect(() => {\n    // Adjust the URL if needed, e.g., http://localhost:8000/sensorData/latest\n    fetch('http://localhost:8000/sensorData/latest').then(res => {\n      console.log(\"Response status:\", res.status);\n      return res.json();\n    }).then(data => {\n      console.log(\"Fetched sensor data:\", data);\n      setLatestMeasurement(data);\n\n      // Check if data contains a valid timestamp\n      if (data && data.timestamp) {\n        const reportedTime = new Date(data.timestamp);\n        const now = new Date();\n        const diffMinutes = (now - reportedTime) / 1000 / 60;\n        console.log(\"Time difference in minutes:\", diffMinutes);\n        setStatus(diffMinutes <= 10 ? 'online' : 'offline');\n        // setStatus('online');\n      } else {\n        console.error(\"No valid timestamp in data:\", data);\n      }\n    }).catch(err => console.error('Error fetching sensor status:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sensor Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: status === 'online' ? 'green' : 'red',\n        color: 'white',\n        padding: '10px'\n      },\n      children: status ? status === 'online' ? 'Online' : 'Offline' : 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), latestMeasurement && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Latest Measurement:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), \" \", latestMeasurement.value, \" mag/arcsec\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 98\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timestamp:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), ' ', new Date(latestMeasurement.timestamp).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(SensorStatus, \"r5ZNB+rLk0gPit0X0dL+uYaJZx0=\");\n_c = SensorStatus;\nexport default SensorStatus;\nvar _c;\n$RefreshReg$(_c, \"SensorStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SensorStatus","_s","status","setStatus","latestMeasurement","setLatestMeasurement","console","log","fetch","then","res","json","data","timestamp","reportedTime","Date","now","diffMinutes","error","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","color","padding","value","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/connorvardakis/WebstormProjects/DenoLightPollution/frontend/src/SensorStatus.js"],"sourcesContent":["// src/SensorStatus.js\nimport React, { useState, useEffect } from 'react';\n\nfunction SensorStatus() {\n    const [status, setStatus] = useState(null);\n    const [latestMeasurement, setLatestMeasurement] = useState(null);\n    console.log(\"Getting status...\");\n\n    useEffect(() => {\n        // Adjust the URL if needed, e.g., http://localhost:8000/sensorData/latest\n        fetch('http://localhost:8000/sensorData/latest')\n            .then((res) => {\n                console.log(\"Response status:\", res.status);\n                return res.json();\n            })\n            .then((data) => {\n                console.log(\"Fetched sensor data:\", data);\n                setLatestMeasurement(data);\n\n                // Check if data contains a valid timestamp\n                if (data && data.timestamp) {\n                    const reportedTime = new Date(data.timestamp);\n                    const now = new Date();\n                    const diffMinutes = (now - reportedTime) / 1000 / 60;\n                    console.log(\"Time difference in minutes:\", diffMinutes);\n                    setStatus(diffMinutes <= 10 ? 'online' : 'offline');\n                    // setStatus('online');\n                } else {\n                    console.error(\"No valid timestamp in data:\", data);\n                }\n            })\n            .catch((err) => console.error('Error fetching sensor status:', err));\n    }, []);\n\n    return (\n        <div>\n            <h2>Sensor Status</h2>\n            <button\n                style={{\n                    background: status === 'online' ? 'green' : 'red',\n                    color: 'white',\n                    padding: '10px',\n                }}\n            >\n                {status ? (status === 'online' ? 'Online' : 'Offline') : 'Loading...'}\n            </button>\n            {latestMeasurement && (\n                <div>\n                    <p>\n                        <strong>Latest Measurement:</strong> {latestMeasurement.value} mag/arcsec<sup>2</sup>\n                    </p>\n                    <p>\n                        <strong>Timestamp:</strong>{' '}\n                        {new Date(latestMeasurement.timestamp).toLocaleString()}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SensorStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}