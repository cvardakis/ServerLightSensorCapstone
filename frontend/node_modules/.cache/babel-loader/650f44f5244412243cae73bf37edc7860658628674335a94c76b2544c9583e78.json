{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (!active || !payload || payload.length === 0) return null;\n  const timeLabel = new Date(label).toLocaleTimeString('en-GB', {\n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", timeLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomTooltip;\nfunction LineGraph() {\n  _s();\n  // Core state\n  const [data, setData] = useState([]); // grouped for chart\n  const [rawData, setRawData] = useState([]); // full DB rows for CSV\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  // Date/time filters\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Axis step customization\n  const [xStep, setXStep] = useState(60); // minutes per X tick\n  const [yMin, setYMin] = useState('');\n  const [yMax, setYMax] = useState('');\n  const [yStep, setYStep] = useState(5);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Toggle sensor selection (enforce at least one)\n  const toggleSensor = sensorId => {\n    setSelectedSensors(prev => {\n      if (prev.includes(sensorId)) {\n        if (prev.length === 1) return prev;\n        return prev.filter(id => id !== sensorId);\n      }\n      return [...prev, sensorId];\n    });\n  };\n\n  // Download CSV of rawData (all DB columns)\n  const downloadCSV = () => {\n    if (!rawData.length) return;\n    const headers = Object.keys(rawData[0]);\n    const csvRows = [headers, ...rawData.map(row => headers.map(h => row[h]))];\n    const csvContent = csvRows.map(r => r.map(cell => `\"${cell}\"`).join(',')).join('\\r\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'Utah-skyscope-data.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // On mount: fetch sensors & set default date/time (rounded)\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const round5 = date => {\n      const ms = date.getTime(),\n        step = 1000 * 60 * 5;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = round5(new Date());\n    const ago12h = new Date(now.getTime() - 12 * 3600 * 1000);\n    setStartDate(`${ago12h.getFullYear()}-${pad(ago12h.getMonth() + 1)}-${pad(ago12h.getDate())}`);\n    setStartTime(`${pad(ago12h.getHours())}:${pad(ago12h.getMinutes())}`);\n    setEndDate(`${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`);\n    setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n    fetch(`${apiUrl}/sensors`).then(r => r.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // Polling fetch: get rawData, group for chart, recalc Y axis\n  useEffect(() => {\n    if (!initialized) return;\n    const fetchAndProcess = () => {\n      const params = new URLSearchParams();\n      if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n      if (startDate) params.append('startDate', startDate);\n      if (startTime) params.append('startTime', startTime);\n      if (endDate) params.append('endDate', endDate);\n      if (endTime) params.append('endTime', endTime);\n      fetch(`${apiUrl}/sensorData/filter?${params.toString()}`).then(r => r.json()).then(rows => {\n        setRawData(rows);\n        // group by timestamp for chart\n        const grouped = {};\n        const readings = [];\n        rows.forEach(item => {\n          const ts = new Date(item.local).getTime();\n          grouped[ts] = grouped[ts] || {\n            timestamp: ts\n          };\n          grouped[ts][item.sensor_id] = parseFloat(item.reading);\n          readings.push(parseFloat(item.reading));\n        });\n        const arr = Object.values(grouped);\n        setData(arr);\n        // adjust Y axis\n        const maxRead = readings.length ? Math.max(...readings) : 0;\n        const ceilMax = Math.ceil(maxRead / yStep) * yStep;\n        setYMin('0');\n        setYMax(ceilMax.toString());\n      }).catch(console.error);\n    };\n    fetchAndProcess();\n    const id = setInterval(fetchAndProcess, 60000);\n    return () => clearInterval(id);\n  }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n  // timestamps for domain\n  const startTs = startDate && startTime ? new Date(`${startDate}T${startTime}`).getTime() : 0;\n  const endTs = endDate && endTime ? new Date(`${endDate}T${endTime}`).getTime() : Date.now();\n\n  // X ticks by xStep\n  const xTicks = [];\n  if (startTs < endTs) {\n    for (let t = startTs; t <= endTs; t += xStep * 60 * 1000) {\n      xTicks.push(t);\n    }\n  }\n\n  // Y ticks by yStep\n  const yTicks = [];\n  const yMinNum = Number(yMin || 0);\n  const yMaxNum = Number(yMax || 0);\n  for (let v = yMinNum; v <= yMaxNum; v += yStep) {\n    yTicks.push(v);\n  }\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          children: sensors.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(s.sensor_id),\n              onChange: () => toggleSensor(s.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), s.name]\n          }, s.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date and Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-selector\",\n          style: {\n            display: 'flex',\n            gap: 24\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options & CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 24,\n            marginBottom: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"X Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: xStep,\n                onChange: e => setXStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5\\xA0min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10\\xA0min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 30,\n                  children: \"30\\xA0min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 60,\n                  children: \"1\\xA0hr\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Min\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMin,\n                onChange: e => setYMin(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Max\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMax,\n                onChange: e => setYMax(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: yStep,\n                onChange: e => setYStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"1\\xA0unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"2\\xA0units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5\\xA0units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10\\xA0units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadCSV,\n            children: \"Download as CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [startTs, endTs],\n          ticks: xTicks,\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMinNum, yMaxNum],\n          ticks: yTicks,\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), sensors.filter(s => selectedSensors.includes(s.sensor_id)).map((s, i) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: s.sensor_id,\n          name: s.name,\n          stroke: colors[i % colors.length],\n          dot: false\n        }, s.sensor_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"jGnXLjwBWBtDVwTlL4ykYMXykRY=\");\n_c2 = LineGraph;\nexport default LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","timeLabel","Date","toLocaleTimeString","hour12","hour","minute","second","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","value","dataKey","_c","LineGraph","_s","data","setData","rawData","setRawData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","xStep","setXStep","yMin","setYMin","yMax","setYMax","yStep","setYStep","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","sensorId","prev","includes","filter","id","downloadCSV","headers","Object","keys","csvRows","row","h","csvContent","r","cell","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","pad","n","String","padStart","round5","date","ms","getTime","step","Math","floor","now","ago12h","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","json","list","s","sensor_id","catch","console","error","fetchAndProcess","params","URLSearchParams","append","toString","rows","grouped","readings","forEach","item","ts","local","timestamp","parseFloat","reading","push","arr","values","maxRead","max","ceilMax","ceil","setInterval","clearInterval","startTs","endTs","xTicks","t","yTicks","yMinNum","Number","yMaxNum","v","colors","width","height","className","marginRight","checked","onChange","display","gap","e","target","alignItems","onClick","margin","top","right","bottom","left","strokeDasharray","domain","ticks","tickFormatter","position","offset","angle","dy","content","verticalAlign","i","stroke","dot","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || payload.length === 0) return null;\n    const timeLabel = new Date(label).toLocaleTimeString('en-GB', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n    });\n    return (\n        <div style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '0.5rem', color: '#000' }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>Time: {timeLabel}</div>\n            {payload.map((entry) => (\n                <div key={entry.dataKey} style={{ color: entry.color, fontWeight: 'bold' }}>\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nfunction LineGraph() {\n    // Core state\n    const [data, setData] = useState([]);             // grouped for chart\n    const [rawData, setRawData] = useState([]);       // full DB rows for CSV\n    const [sensors, setSensors] = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n    const [initialized, setInitialized] = useState(false);\n\n    // Date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [endTime, setEndTime] = useState('');\n\n    // Axis step customization\n    const [xStep, setXStep] = useState(60);   // minutes per X tick\n    const [yMin, setYMin] = useState('');\n    const [yMax, setYMax] = useState('');\n    const [yStep, setYStep] = useState(5);\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // Toggle sensor selection (enforce at least one)\n    const toggleSensor = (sensorId) => {\n        setSelectedSensors(prev => {\n            if (prev.includes(sensorId)) {\n                if (prev.length === 1) return prev;\n                return prev.filter(id => id !== sensorId);\n            }\n            return [...prev, sensorId];\n        });\n    };\n\n    // Download CSV of rawData (all DB columns)\n    const downloadCSV = () => {\n        if (!rawData.length) return;\n        const headers = Object.keys(rawData[0]);\n        const csvRows = [\n            headers,\n            ...rawData.map(row => headers.map(h => row[h]))\n        ];\n        const csvContent = csvRows\n            .map(r => r.map(cell => `\"${cell}\"`).join(','))\n            .join('\\r\\n');\n        const blob = new Blob([csvContent], { type: 'text/csv' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'Utah-skyscope-data.csv';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n    };\n\n    // On mount: fetch sensors & set default date/time (rounded)\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = date => {\n            const ms = date.getTime(), step = 1000 * 60 * 5;\n            return new Date(Math.floor(ms/step)*step);\n        };\n        const now = round5(new Date());\n        const ago12h = new Date(now.getTime() - 12*3600*1000);\n\n        setStartDate(`${ago12h.getFullYear()}-${pad(ago12h.getMonth()+1)}-${pad(ago12h.getDate())}`);\n        setStartTime(`${pad(ago12h.getHours())}:${pad(ago12h.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Polling fetch: get rawData, group for chart, recalc Y axis\n    useEffect(() => {\n        if (!initialized) return;\n        const fetchAndProcess = () => {\n            const params = new URLSearchParams();\n            if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n            if (startDate) params.append('startDate', startDate);\n            if (startTime) params.append('startTime', startTime);\n            if (endDate) params.append('endDate', endDate);\n            if (endTime) params.append('endTime', endTime);\n\n            fetch(`${apiUrl}/sensorData/filter?${params.toString()}`)\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    // group by timestamp for chart\n                    const grouped = {};\n                    const readings = [];\n                    rows.forEach(item => {\n                        const ts = new Date(item.local).getTime();\n                        grouped[ts] = grouped[ts] || { timestamp: ts };\n                        grouped[ts][item.sensor_id] = parseFloat(item.reading);\n                        readings.push(parseFloat(item.reading));\n                    });\n                    const arr = Object.values(grouped);\n                    setData(arr);\n                    // adjust Y axis\n                    const maxRead = readings.length ? Math.max(...readings) : 0;\n                    const ceilMax = Math.ceil(maxRead / yStep) * yStep;\n                    setYMin('0');\n                    setYMax(ceilMax.toString());\n                })\n                .catch(console.error);\n        };\n\n        fetchAndProcess();\n        const id = setInterval(fetchAndProcess, 60000);\n        return () => clearInterval(id);\n    }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n    // timestamps for domain\n    const startTs = startDate && startTime\n        ? new Date(`${startDate}T${startTime}`).getTime()\n        : 0;\n    const endTs = endDate && endTime\n        ? new Date(`${endDate}T${endTime}`).getTime()\n        : Date.now();\n\n    // X ticks by xStep\n    const xTicks = [];\n    if (startTs < endTs) {\n        for (let t = startTs; t <= endTs; t += xStep*60*1000) {\n            xTicks.push(t);\n        }\n    }\n\n    // Y ticks by yStep\n    const yTicks = [];\n    const yMinNum = Number(yMin || 0);\n    const yMaxNum = Number(yMax || 0);\n    for (let v = yMinNum; v <= yMaxNum; v += yStep) {\n        yTicks.push(v);\n    }\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            <div className=\"menuContainer\">\n                {/* Sensor Selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div className=\"sensor-options\">\n                        {sensors.map(s => (\n                            <label key={s.sensor_id} style={{ marginRight: 12 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n                {/* Date & Range */}\n                <section className=\"section2\">\n                    <h4>Date and Range</h4>\n                    <div className=\"range-selector\" style={{ display: 'flex', gap: 24 }}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} />\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime} onChange={e => setStartTime(e.target.value)} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime} onChange={e => setEndTime(e.target.value)} />\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Axis Steps & CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options & CSV</h4>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 24, marginBottom: 8 }}>\n                        <div>\n                            <label>X Step<br/>\n                                <select value={xStep} onChange={e => setXStep(Number(e.target.value))}>\n                                    <option value={5}>5 min</option>\n                                    <option value={10}>10 min</option>\n                                    <option value={30}>30 min</option>\n                                    <option value={60}>1 hr</option>\n                                </select>\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Min<br/>\n                                <input type=\"number\" value={yMin} onChange={e => setYMin(e.target.value)} style={{ width: 60 }} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input type=\"number\" value={yMax} onChange={e => setYMax(e.target.value)} style={{ width: 60 }} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                        <button onClick={downloadCSV}>Download as CSV</button>\n                    </div>\n                </section>\n            </div>\n\n            {/* Chart */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={data} margin={{ top: 20, right: 10, bottom: 80, left: 10 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms => new Date(ms).toLocaleTimeString('en-GB', { hour12: false, hour: '2-digit', minute: '2-digit', second: '2-digit' })}\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMinNum, yMaxNum]}\n                        ticks={yTicks}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n                    {sensors\n                        .filter(s => selectedSensors.includes(s.sensor_id))\n                        .map((s, i) => (\n                            <Line\n                                key={s.sensor_id}\n                                type=\"monotone\"\n                                dataKey={s.sensor_id}\n                                name={s.name}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                            />\n                        ))}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default LineGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}