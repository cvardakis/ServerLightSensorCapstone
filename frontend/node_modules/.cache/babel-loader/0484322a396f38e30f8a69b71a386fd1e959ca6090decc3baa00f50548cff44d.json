{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./SensorStatus.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SensorStatus(){const[status,setStatus]=useState(null);const[latestMeasurement,setLatestMeasurement]=useState(null);useEffect(()=>{if(process.env.NODE_ENV==='development'){// Use fake data in development for easier testing\nconst fakeData={value:21.5,timestamp:new Date().toISOString()};const simulateFetch=()=>new Promise(resolve=>setTimeout(()=>resolve(fakeData),500));simulateFetch().then(handleData).catch(console.error);}else{// Use the real API call in production\nfetch('https://utah-skyscope.deno.dev/sensorData/latest').then(res=>res.json()).then(handleData).catch(err=>console.error('Error fetching sensor status:',err));}},[]);function handleData(data){setLatestMeasurement(data);if(data&&data.timestamp){const reportedTime=new Date(data.timestamp);const now=new Date();const diffMinutes=(now-reportedTime)/1000/60;setStatus(diffMinutes<=10?'online':'offline');}}return/*#__PURE__*/_jsxs(\"div\",{className:\"sensor-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sensor Name\"}),/*#__PURE__*/_jsx(\"button\",{style:{background:status==='online'?'green':'red',color:'white',padding:'10px'},children:status?status==='online'?'Online':'Offline':'Loading...'}),latestMeasurement&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Latest Measurement\"}),/*#__PURE__*/_jsx(\"br\",{}),latestMeasurement.value,\" mag/arcsec\",/*#__PURE__*/_jsx(\"sup\",{children:\"2\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Timestamp\"}),/*#__PURE__*/_jsx(\"br\",{}),new Date(latestMeasurement.timestamp).toLocaleString()]})]})]});}export default SensorStatus;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","SensorStatus","status","setStatus","latestMeasurement","setLatestMeasurement","process","env","NODE_ENV","fakeData","value","timestamp","Date","toISOString","simulateFetch","Promise","resolve","setTimeout","then","handleData","catch","console","error","fetch","res","json","err","data","reportedTime","now","diffMinutes","className","children","style","background","color","padding","toLocaleString"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/SensorStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SensorStatus.css'\n\nfunction SensorStatus() {\n    const [status, setStatus] = useState(null);\n    const [latestMeasurement, setLatestMeasurement] = useState(null);\n\n    useEffect(() => {\n        if (process.env.NODE_ENV === 'development') {\n            // Use fake data in development for easier testing\n            const fakeData = {\n                value: 21.5,\n                timestamp: new Date().toISOString()\n            };\n\n            const simulateFetch = () =>\n                new Promise((resolve) => setTimeout(() => resolve(fakeData), 500));\n\n            simulateFetch().then(handleData).catch(console.error);\n        } else {\n            // Use the real API call in production\n            fetch('https://utah-skyscope.deno.dev/sensorData/latest')\n                .then((res) => res.json())\n                .then(handleData)\n                .catch((err) => console.error('Error fetching sensor status:', err));\n        }\n    }, []);\n\n    function handleData(data) {\n        setLatestMeasurement(data);\n        if (data && data.timestamp) {\n            const reportedTime = new Date(data.timestamp);\n            const now = new Date();\n            const diffMinutes = (now - reportedTime) / 1000 / 60;\n            setStatus(diffMinutes <= 10 ? 'online' : 'offline');\n        }\n    }\n\n    return (\n        <div className=\"sensor-container\">\n            <h2>Sensor Name</h2>\n            <button\n                style={{\n                    background: status === 'online' ? 'green' : 'red',\n                    color: 'white',\n                    padding: '10px'\n                }}\n            >\n                {status ? (status === 'online' ? 'Online' : 'Offline') : 'Loading...'}\n            </button>\n            {latestMeasurement && (\n                <div>\n                    <p>\n                        <strong>Latest Measurement</strong><br />\n                        {latestMeasurement.value} mag/arcsec<sup>2</sup>\n                    </p>\n                    <p>\n                        <strong>Timestamp</strong><br />\n                        {new Date(latestMeasurement.timestamp).toLocaleString()}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SensorStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}