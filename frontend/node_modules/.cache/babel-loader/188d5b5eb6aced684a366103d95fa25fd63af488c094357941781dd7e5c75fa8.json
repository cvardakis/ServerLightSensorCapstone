{"ast":null,"code":"import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import'./ReactChartsLine.css';// Custom tooltip with a finite‐check on the timestamp\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const CustomTooltip=_ref=>{let{active,payload,label}=_ref;if(!active||!(payload!==null&&payload!==void 0&&payload.length))return null;// parse label as a Date\nconst date=new Date(label);if(isNaN(date.getTime()))return null;// bail if invalid\n// format however you like\nconst timeLabel=date.toLocaleString('en-US',{hour12:false,month:'2-digit',day:'2-digit',hour:'2-digit',minute:'2-digit'});return/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#fff',border:'1px solid #ccc',padding:'0.5rem',color:'#000'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontWeight:'bold',marginBottom:4},children:[\"Time: \",timeLabel]}),payload.map(entry=>/*#__PURE__*/_jsxs(\"div\",{style:{color:entry.color,fontWeight:'bold'},children:[entry.name,\": \",entry.value]},entry.dataKey))]});};export default function LineGraph(){// Raw & pivoted data\nconst[rawData,setRawData]=useState([]);const[chartData,setChartData]=useState([]);// Sensor list & selection\nconst[sensors,setSensors]=useState([]);const[selectedSensors,setSelectedSensors]=useState([]);// Init flag (wait until sensors are loaded)\nconst[initialized,setInitialized]=useState(false);// Date/time filters\nconst[startDate,setStartDate]=useState('');const[startTime,setStartTime]=useState('');const[endDate,setEndDate]=useState('');const[endTime,setEndTime]=useState('');// Y‑axis controls\nconst[yStep,setYStep]=useState(5);const[yMin,setYMin]=useState(0);const[yMax,setYMax]=useState(0);const apiUrl=process.env.REACT_APP_API_URL||'http://localhost:8000';// Helper to enforce at least one sensor checked\nconst toggleSensor=id=>{setSelectedSensors(prev=>{if(prev.includes(id)){return prev.length===1?prev:prev.filter(x=>x!==id);}return[...prev,id];});};// On mount: round to 5 min, set filters, fetch sensor list\nuseEffect(()=>{const pad=n=>String(n).padStart(2,'0');const round5=d=>{const ms=d.getTime(),step=5*60*1000;return new Date(Math.floor(ms/step)*step);};const now=round5(new Date());const ago12=new Date(now.getTime()-12*3600*1000);setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth()+1)}-${pad(ago12.getDate())}`);setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);fetch(`${apiUrl}/sensors`).then(r=>r.json()).then(list=>{setSensors(list);setSelectedSensors(list.map(s=>s.sensor_id));setInitialized(true);}).catch(console.error);},[apiUrl]);// Fetch rawData any time filters or selection change\nuseEffect(()=>{if(!initialized)return;const buildUrl=()=>{const p=new URLSearchParams();if(selectedSensors.length)p.set('sensor',selectedSensors.join(','));if(startDate)p.set('startDate',startDate);if(startTime)p.set('startTime',startTime);if(endDate)p.set('endDate',endDate);if(endTime)p.set('endTime',endTime);return`${apiUrl}/sensorData/filter?${p.toString()}`;};const fetchData=()=>{fetch(buildUrl()).then(r=>r.json()).then(rows=>{setRawData(rows);// Pivot & normalize:\nconst bucket={};rows.forEach(_ref2=>{let{sensor_id,local,reading}=_ref2;const ts=new Date(local).getTime();if(!bucket[ts])bucket[ts]={timestamp:ts};bucket[ts][sensor_id]=parseFloat(reading);});let arr=Object.values(bucket).sort((a,b)=>a.timestamp-b.timestamp);// ensure each timestamp has a key for every selected sensor\narr=arr.map(pt=>{selectedSensors.forEach(id=>{if(!(id in pt))pt[id]=null;});return pt;});setChartData(arr);// Recompute Y domain\nconst all=rows.map(r=>parseFloat(r.reading));const maxR=all.length?Math.max(...all):0;const ceilMax=Math.ceil(maxR/yStep)*yStep;setYMin(0);setYMax(ceilMax);}).catch(console.error);};fetchData();// const iv = setInterval(fetchData, 60_000);\n// return () => clearInterval(iv);\n},[apiUrl,initialized,startDate,startTime,endDate,endTime,selectedSensors,yStep]);// Compute X & Y ticks\nconst startTs=new Date(`${startDate}T${startTime}`).getTime();const endTs=new Date(`${endDate}T${endTime}`).getTime();// X ticks every hour\nconst xTicks=[];let firstHour=new Date(startTs);firstHour.setMinutes(0,0,0);if(firstHour.getTime()<startTs)firstHour=new Date(firstHour.getTime()+3600000);for(let t=firstHour.getTime();t<=endTs;t+=3600000){xTicks.push(t);}// Y ticks by yStep\nconst yTicks=[];for(let v=yMin;v<=yMax;v+=yStep){yTicks.push(v);}const colors=['#8884d8','#82ca9d','#ffc658','#ff7300','#a4de6c'];return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',height:600},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menuContainer\",children:[/*#__PURE__*/_jsxs(\"section\",{className:\"section1\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Sensor Selection\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sensor-options\",style:{display:'flex',flexDirection:'column',gap:'0.5rem'},children:sensors.map(s=>/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedSensors.includes(s.sensor_id),onChange:()=>toggleSensor(s.sensor_id)}),s.name]},s.sensor_id))})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"section2\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Date & Range\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:24,justifyContent:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Date\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:startDate,onChange:e=>setStartDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Start Time\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",step:\"300\",value:startTime,onChange:e=>setStartTime(e.target.value)})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"End Date\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:endDate,onChange:e=>setEndDate(e.target.value)})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"End Time\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",step:\"300\",value:endTime,onChange:e=>setEndTime(e.target.value)})]})]})]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"section3\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Data Options\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:24,marginBottom:8,justifyContent:'center'},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Y Min\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:yMin,onChange:e=>setYMin(Number(e.target.value)),style:{width:60}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Y Max\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:yMax,onChange:e=>setYMax(Number(e.target.value)),style:{width:60}})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Y Step\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"select\",{value:yStep,onChange:e=>setYStep(Number(e.target.value)),children:[/*#__PURE__*/_jsx(\"option\",{value:1,children:\"1 unit\"}),/*#__PURE__*/_jsx(\"option\",{value:2,children:\"2 units\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5 units\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10 units\"})]})]})})]})]})]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:10,bottom:80,left:10},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"timestamp\",type:\"number\",domain:[startTs,endTs],ticks:xTicks,tickFormatter:ms=>new Date(ms).toLocaleTimeString('en-GB',{hour12:false,hour:'2-digit',minute:'2-digit'}),label:{value:'Local Time',position:'bottom',offset:20,style:{fontWeight:'bold'}}}),/*#__PURE__*/_jsx(YAxis,{domain:[yMin,yMax],ticks:yTicks,label:{value:'mag/arcsec²',angle:-90,position:'insideLeft',dy:50,style:{fontWeight:'bold'}}}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomTooltip,{})}),/*#__PURE__*/_jsx(Legend,{verticalAlign:\"top\"}),selectedSensors.map((id,i)=>{const sensor=sensors.find(s=>s.sensor_id===id);return/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:id,name:(sensor===null||sensor===void 0?void 0:sensor.name)||id,stroke:colors[i%colors.length],dot:false,connectNulls:true},id);})]})})]});}","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxs","_jsxs","jsx","_jsx","CustomTooltip","_ref","active","payload","label","length","date","Date","isNaN","getTime","timeLabel","toLocaleString","hour12","month","day","hour","minute","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","map","entry","name","value","dataKey","LineGraph","rawData","setRawData","chartData","setChartData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","yStep","setYStep","yMin","setYMin","yMax","setYMax","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","id","prev","includes","filter","x","pad","n","String","padStart","round5","d","ms","step","Math","floor","now","ago12","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","r","json","list","s","sensor_id","catch","console","error","buildUrl","p","URLSearchParams","set","join","toString","fetchData","rows","bucket","forEach","_ref2","local","reading","ts","timestamp","parseFloat","arr","Object","values","sort","a","b","pt","all","maxR","max","ceilMax","ceil","startTs","endTs","xTicks","firstHour","setMinutes","t","push","yTicks","v","colors","width","height","className","display","flexDirection","gap","type","checked","onChange","justifyContent","e","target","alignItems","Number","data","margin","top","right","bottom","left","strokeDasharray","domain","ticks","tickFormatter","toLocaleTimeString","position","offset","angle","dy","content","verticalAlign","i","sensor","find","stroke","dot","connectNulls"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip with a finite‐check on the timestamp\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload?.length) return null;\n\n    // parse label as a Date\n    const date = new Date(label);\n    if (isNaN(date.getTime())) return null;  // bail if invalid\n\n    // format however you like\n    const timeLabel = date.toLocaleString('en-US', {\n        hour12: false,\n        month:  '2-digit',\n        day:    '2-digit',\n        hour:   '2-digit',\n        minute: '2-digit',\n    });\n\n    return (\n        <div style={{\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            padding: '0.5rem',\n            color: '#000'\n        }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>\n                Time: {timeLabel}\n            </div>\n            {payload.map(entry => (\n                <div\n                    key={entry.dataKey}\n                    style={{ color: entry.color, fontWeight: 'bold' }}\n                >\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\n\nexport default function LineGraph() {\n    // Raw & pivoted data\n    const [rawData, setRawData]       = useState([]);\n    const [chartData, setChartData]   = useState([]);\n\n    // Sensor list & selection\n    const [sensors, setSensors]             = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n\n    // Init flag (wait until sensors are loaded)\n    const [initialized, setInitialized]     = useState(false);\n\n    // Date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate,   setEndDate]   = useState('');\n    const [endTime,   setEndTime]   = useState('');\n\n    // Y‑axis controls\n    const [yStep, setYStep] = useState(5);\n    const [yMin,  setYMin]  = useState(0);\n    const [yMax,  setYMax]  = useState(0);\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // Helper to enforce at least one sensor checked\n    const toggleSensor = id => {\n        setSelectedSensors(prev => {\n            if (prev.includes(id)) {\n                return prev.length === 1 ? prev : prev.filter(x => x !== id);\n            }\n            return [...prev, id];\n        });\n    };\n\n    // On mount: round to 5 min, set filters, fetch sensor list\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = d => {\n            const ms = d.getTime(), step = 5 * 60 * 1000;\n            return new Date(Math.floor(ms/step)*step);\n        };\n        const now = round5(new Date());\n        const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n\n        setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth()+1)}-${pad(ago12.getDate())}`);\n        setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Fetch rawData any time filters or selection change\n    useEffect(() => {\n        if (!initialized) return;\n\n        const buildUrl = () => {\n            const p = new URLSearchParams();\n            if (selectedSensors.length) p.set('sensor', selectedSensors.join(','));\n            if (startDate) p.set('startDate', startDate);\n            if (startTime) p.set('startTime', startTime);\n            if (endDate)   p.set('endDate', endDate);\n            if (endTime)   p.set('endTime', endTime);\n            return `${apiUrl}/sensorData/filter?${p.toString()}`;\n        };\n\n        const fetchData = () => {\n            fetch(buildUrl())\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    // Pivot & normalize:\n                    const bucket = {};\n                    rows.forEach(({ sensor_id, local, reading }) => {\n                        const ts = new Date(local).getTime();\n                        if (!bucket[ts]) bucket[ts] = { timestamp: ts };\n                        bucket[ts][sensor_id] = parseFloat(reading);\n                    });\n                    let arr = Object.values(bucket).sort((a,b) => a.timestamp - b.timestamp);\n                    // ensure each timestamp has a key for every selected sensor\n                    arr = arr.map(pt => {\n                        selectedSensors.forEach(id => {\n                            if (!(id in pt)) pt[id] = null;\n                        });\n                        return pt;\n                    });\n                    setChartData(arr);\n\n                    // Recompute Y domain\n                    const all = rows.map(r => parseFloat(r.reading));\n                    const maxR = all.length ? Math.max(...all) : 0;\n                    const ceilMax = Math.ceil(maxR / yStep) * yStep;\n                    setYMin(0);\n                    setYMax(ceilMax);\n                })\n                .catch(console.error);\n        };\n\n        fetchData();\n        // const iv = setInterval(fetchData, 60_000);\n        // return () => clearInterval(iv);\n    }, [\n        apiUrl,\n        initialized,\n        startDate,\n        startTime,\n        endDate,\n        endTime,\n        selectedSensors,\n        yStep\n    ]);\n\n    // Compute X & Y ticks\n    const startTs = new Date(`${startDate}T${startTime}`).getTime();\n    const endTs   = new Date(`${endDate}T${endTime}`).getTime();\n    // X ticks every hour\n    const xTicks = [];\n    let firstHour = new Date(startTs);\n    firstHour.setMinutes(0,0,0);\n    if (firstHour.getTime() < startTs) firstHour = new Date(firstHour.getTime() + 3600_000);\n    for (let t = firstHour.getTime(); t <= endTs; t += 3600_000) {\n        xTicks.push(t);\n    }\n    // Y ticks by yStep\n    const yTicks = [];\n    for (let v = yMin; v <= yMax; v += yStep) {\n        yTicks.push(v);\n    }\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            {/* ─── Menus ────────────────────────────────────────────────────────── */}\n            <div className=\"menuContainer\">\n                {/* Sensor Selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div\n                        className=\"sensor-options\"\n                        style={{display: 'flex', flexDirection: 'column', gap: '0.5rem'}}\n                    >\n                        {sensors.map(s => (\n                            <label key={s.sensor_id}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n\n                {/* Date & Range */}\n                <section className=\"section2\">\n                    <h4>Date & Range</h4>\n                    <div style={{display: 'flex', gap: 24, justifyContent: 'center'}}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)}/>\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime}\n                                       onChange={e => setStartTime(e.target.value)}/>\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime}\n                                       onChange={e => setEndTime(e.target.value)}/>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Y‑Axis & CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n                    <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 24,\n                        marginBottom: 8,\n                        justifyContent: 'center'\n                    }}>\n                        <div>\n                            <label>Y Min<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMin}\n                                    onChange={e => setYMin(Number(e.target.value))}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMax}\n                                    onChange={e => setYMax(Number(e.target.value))}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n            {/* ─── Chart ────────────────────────────────────────────────────────── */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                    data={chartData}\n                    margin={{top: 20, right: 10, bottom: 80, left: 10}}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms => new Date(ms).toLocaleTimeString('en-GB', {\n                            hour12: false, hour: '2-digit', minute: '2-digit'\n                        })}\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMin, yMax]}\n                        ticks={yTicks}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n\n                    {selectedSensors.map((id, i) => {\n                        const sensor = sensors.find(s => s.sensor_id === id);\n                        return (\n                            <Line\n                                key={id}\n                                type=\"monotone\"\n                                dataKey={id}\n                                name={sensor?.name || id}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                                connectNulls\n                            />\n                        );\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}