{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip with a finite‐check on the timestamp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (!active || !(payload !== null && payload !== void 0 && payload.length)) return null;\n  const ts = typeof label === 'number' ? label : Number(label);\n  if (!isFinite(ts)) return null;\n  const fmt = new Intl.DateTimeFormat('en-US', {\n    hour12: false,\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", fmt.format(ts)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomTooltip;\nexport default function LineGraph() {\n  _s();\n  // Raw & pivoted data\n  const [rawData, setRawData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  // Sensor list & selection\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n\n  // Init flag (wait until sensors are loaded)\n  const [initialized, setInitialized] = useState(false);\n\n  // Date/time filters\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Y‑axis controls\n  const [yStep, setYStep] = useState(5);\n  const [yMin, setYMin] = useState(0);\n  const [yMax, setYMax] = useState(0);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Helper to enforce at least one sensor checked\n  const toggleSensor = id => {\n    setSelectedSensors(prev => {\n      if (prev.includes(id)) {\n        return prev.length === 1 ? prev : prev.filter(x => x !== id);\n      }\n      return [...prev, id];\n    });\n  };\n\n  // On mount: round to 5 min, set filters, fetch sensor list\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const round5 = d => {\n      const ms = d.getTime(),\n        step = 5 * 60 * 1000;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = round5(new Date());\n    const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n    setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth() + 1)}-${pad(ago12.getDate())}`);\n    setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n    setEndDate(`${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`);\n    setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n    fetch(`${apiUrl}/sensors`).then(r => r.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // Fetch rawData any time filters or selection change\n  useEffect(() => {\n    if (!initialized) return;\n    const buildUrl = () => {\n      const p = new URLSearchParams();\n      if (selectedSensors.length) p.set('sensor', selectedSensors.join(','));\n      if (startDate) p.set('startDate', startDate);\n      if (startTime) p.set('startTime', startTime);\n      if (endDate) p.set('endDate', endDate);\n      if (endTime) p.set('endTime', endTime);\n      return `${apiUrl}/sensorData/filter?${p.toString()}`;\n    };\n    const fetchData = () => {\n      fetch(buildUrl()).then(r => r.json()).then(rows => {\n        setRawData(rows);\n        // Pivot & normalize:\n        const bucket = {};\n        rows.forEach(({\n          sensor_id,\n          local,\n          reading\n        }) => {\n          const ts = new Date(local).getTime();\n          if (!bucket[ts]) bucket[ts] = {\n            timestamp: ts\n          };\n          bucket[ts][sensor_id] = parseFloat(reading);\n        });\n        let arr = Object.values(bucket).sort((a, b) => a.timestamp - b.timestamp);\n        // ensure each timestamp has a key for every selected sensor\n        arr = arr.map(pt => {\n          selectedSensors.forEach(id => {\n            if (!(id in pt)) pt[id] = null;\n          });\n          return pt;\n        });\n        setChartData(arr);\n\n        // Recompute Y domain\n        const all = rows.map(r => parseFloat(r.reading));\n        const maxR = all.length ? Math.max(...all) : 0;\n        const ceilMax = Math.ceil(maxR / yStep) * yStep;\n        setYMin(0);\n        setYMax(ceilMax);\n      }).catch(console.error);\n    };\n    fetchData();\n    const iv = setInterval(fetchData, 60000);\n    return () => clearInterval(iv);\n  }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n  // Compute X & Y ticks\n  const startTs = new Date(`${startDate}T${startTime}`).getTime();\n  const endTs = new Date(`${endDate}T${endTime}`).getTime();\n  // X ticks every hour\n  const xTicks = [];\n  let firstHour = new Date(startTs);\n  firstHour.setMinutes(0, 0, 0);\n  if (firstHour.getTime() < startTs) firstHour = new Date(firstHour.getTime() + 3600000);\n  for (let t = firstHour.getTime(); t <= endTs; t += 3600000) {\n    xTicks.push(t);\n  }\n  // Y ticks by yStep\n  const yTicks = [];\n  for (let v = yMin; v <= yMax; v += yStep) {\n    yTicks.push(v);\n  }\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          children: sensors.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(s.sensor_id),\n              onChange: () => toggleSensor(s.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), s.name]\n          }, s.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date & Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 24,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 24,\n            marginBottom: 8,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Min\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMin,\n                onChange: e => setYMin(Number(e.target.value)),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Max\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMax,\n                onChange: e => setYMax(Number(e.target.value)),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: yStep,\n                onChange: e => setYStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"1 unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"2 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [startTs, endTs],\n          ticks: xTicks,\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMin, yMax],\n          ticks: yTicks,\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), selectedSensors.map((id, i) => {\n          const sensor = sensors.find(s => s.sensor_id === id);\n          return /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: id,\n            name: (sensor === null || sensor === void 0 ? void 0 : sensor.name) || id,\n            stroke: colors[i % colors.length],\n            dot: false,\n            connectNulls: true\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"2N2em5ZdB2sWbU+Ns8ZH+unlbyA=\");\n_c2 = LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","ts","Number","isFinite","fmt","Intl","DateTimeFormat","hour12","month","day","hour","minute","style","backgroundColor","border","padding","children","fontWeight","marginBottom","format","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","color","name","value","dataKey","_c","LineGraph","_s","rawData","setRawData","chartData","setChartData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","yStep","setYStep","yMin","setYMin","yMax","setYMax","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","id","prev","includes","filter","x","pad","n","String","padStart","round5","d","ms","getTime","step","Date","Math","floor","now","ago12","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","r","json","list","s","sensor_id","catch","console","error","buildUrl","p","URLSearchParams","set","join","toString","fetchData","rows","bucket","forEach","local","reading","timestamp","parseFloat","arr","Object","values","sort","a","b","pt","all","maxR","max","ceilMax","ceil","iv","setInterval","clearInterval","startTs","endTs","xTicks","firstHour","setMinutes","t","push","yTicks","v","colors","width","height","className","marginRight","type","checked","onChange","display","gap","justifyContent","e","target","alignItems","data","margin","top","right","bottom","left","strokeDasharray","domain","ticks","tickFormatter","toLocaleTimeString","position","offset","angle","dy","content","verticalAlign","i","sensor","find","stroke","dot","connectNulls","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip with a finite‐check on the timestamp\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload?.length) return null;\n    const ts = typeof label === 'number' ? label : Number(label);\n    if (!isFinite(ts)) return null;\n\n    const fmt = new Intl.DateTimeFormat('en-US', {\n        hour12: false,\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n    });\n\n    return (\n        <div style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '0.5rem' }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>Time: {fmt.format(ts)}</div>\n            {payload.map(entry => (\n                <div key={entry.dataKey} style={{ color: entry.color, fontWeight: 'bold' }}>\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default function LineGraph() {\n    // Raw & pivoted data\n    const [rawData, setRawData]       = useState([]);\n    const [chartData, setChartData]   = useState([]);\n\n    // Sensor list & selection\n    const [sensors, setSensors]             = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n\n    // Init flag (wait until sensors are loaded)\n    const [initialized, setInitialized]     = useState(false);\n\n    // Date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate,   setEndDate]   = useState('');\n    const [endTime,   setEndTime]   = useState('');\n\n    // Y‑axis controls\n    const [yStep, setYStep] = useState(5);\n    const [yMin,  setYMin]  = useState(0);\n    const [yMax,  setYMax]  = useState(0);\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // Helper to enforce at least one sensor checked\n    const toggleSensor = id => {\n        setSelectedSensors(prev => {\n            if (prev.includes(id)) {\n                return prev.length === 1 ? prev : prev.filter(x => x !== id);\n            }\n            return [...prev, id];\n        });\n    };\n\n    // On mount: round to 5 min, set filters, fetch sensor list\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = d => {\n            const ms = d.getTime(), step = 5 * 60 * 1000;\n            return new Date(Math.floor(ms/step)*step);\n        };\n        const now = round5(new Date());\n        const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n\n        setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth()+1)}-${pad(ago12.getDate())}`);\n        setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Fetch rawData any time filters or selection change\n    useEffect(() => {\n        if (!initialized) return;\n\n        const buildUrl = () => {\n            const p = new URLSearchParams();\n            if (selectedSensors.length) p.set('sensor', selectedSensors.join(','));\n            if (startDate) p.set('startDate', startDate);\n            if (startTime) p.set('startTime', startTime);\n            if (endDate)   p.set('endDate', endDate);\n            if (endTime)   p.set('endTime', endTime);\n            return `${apiUrl}/sensorData/filter?${p.toString()}`;\n        };\n\n        const fetchData = () => {\n            fetch(buildUrl())\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    // Pivot & normalize:\n                    const bucket = {};\n                    rows.forEach(({ sensor_id, local, reading }) => {\n                        const ts = new Date(local).getTime();\n                        if (!bucket[ts]) bucket[ts] = { timestamp: ts };\n                        bucket[ts][sensor_id] = parseFloat(reading);\n                    });\n                    let arr = Object.values(bucket).sort((a,b) => a.timestamp - b.timestamp);\n                    // ensure each timestamp has a key for every selected sensor\n                    arr = arr.map(pt => {\n                        selectedSensors.forEach(id => {\n                            if (!(id in pt)) pt[id] = null;\n                        });\n                        return pt;\n                    });\n                    setChartData(arr);\n\n                    // Recompute Y domain\n                    const all = rows.map(r => parseFloat(r.reading));\n                    const maxR = all.length ? Math.max(...all) : 0;\n                    const ceilMax = Math.ceil(maxR / yStep) * yStep;\n                    setYMin(0);\n                    setYMax(ceilMax);\n                })\n                .catch(console.error);\n        };\n\n        fetchData();\n        const iv = setInterval(fetchData, 60_000);\n        return () => clearInterval(iv);\n    }, [\n        apiUrl,\n        initialized,\n        startDate,\n        startTime,\n        endDate,\n        endTime,\n        selectedSensors,\n        yStep\n    ]);\n\n    // Compute X & Y ticks\n    const startTs = new Date(`${startDate}T${startTime}`).getTime();\n    const endTs   = new Date(`${endDate}T${endTime}`).getTime();\n    // X ticks every hour\n    const xTicks = [];\n    let firstHour = new Date(startTs);\n    firstHour.setMinutes(0,0,0);\n    if (firstHour.getTime() < startTs) firstHour = new Date(firstHour.getTime() + 3600_000);\n    for (let t = firstHour.getTime(); t <= endTs; t += 3600_000) {\n        xTicks.push(t);\n    }\n    // Y ticks by yStep\n    const yTicks = [];\n    for (let v = yMin; v <= yMax; v += yStep) {\n        yTicks.push(v);\n    }\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            {/* ─── Menus ────────────────────────────────────────────────────────── */}\n            <div className=\"menuContainer\">\n                {/* Sensor Selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div className=\"sensor-options\">\n                        {sensors.map(s => (\n                            <label key={s.sensor_id} style={{ marginRight: 12 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n                {/* Date & Range */}\n                <section className=\"section2\">\n                    <h4>Date & Range</h4>\n                    <div style={{ display: 'flex', gap: 24, justifyContent: 'center' }}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} />\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime} onChange={e => setStartTime(e.target.value)} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime} onChange={e => setEndTime(e.target.value)} />\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Y‑Axis & CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 24, marginBottom: 8, justifyContent: 'center' }}>\n                        <div>\n                            <label>Y Min<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMin}\n                                    onChange={e => setYMin(Number(e.target.value))}\n                                    style={{ width: 60 }}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMax}\n                                    onChange={e => setYMax(Number(e.target.value))}\n                                    style={{ width: 60 }}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n            {/* ─── Chart ────────────────────────────────────────────────────────── */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                    data={chartData}\n                    margin={{ top: 20, right: 10, bottom: 80, left: 10 }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms => new Date(ms).toLocaleTimeString('en-GB', {\n                            hour12: false, hour: '2-digit', minute: '2-digit'\n                        })}\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMin, yMax]}\n                        ticks={yTicks}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n\n                    {selectedSensors.map((id, i) => {\n                        const sensor = sensors.find(s => s.sensor_id === id);\n                        return (\n                            <Line\n                                key={id}\n                                type=\"monotone\"\n                                dataKey={id}\n                                name={sensor?.name || id}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                                connectNulls\n                            />\n                        );\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}