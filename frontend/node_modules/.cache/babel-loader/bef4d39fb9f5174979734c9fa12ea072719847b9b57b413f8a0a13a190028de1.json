{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (!active || !payload || payload.length === 0) return null;\n  const timeLabel = new Date(label).toLocaleTimeString('en-GB', {\n    hour12: false,\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", timeLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomTooltip;\nfunction LineGraph() {\n  _s();\n  // Core state\n  const [data, setData] = useState([]);\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  // Date/time filters (local, rounded on mount)\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Axis domain customizations\n  const [xMinStr, setXMinStr] = useState('');\n  const [xMaxStr, setXMaxStr] = useState('');\n  const [yMin, setYMin] = useState('');\n  const [yMax, setYMax] = useState('');\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // Toggle sensor selection (at least one remains)\n  const toggleSensor = sensorId => {\n    setSelectedSensors(prev => {\n      if (prev.includes(sensorId)) {\n        if (prev.length === 1) return prev;\n        return prev.filter(id => id !== sensorId);\n      }\n      return [...prev, sensorId];\n    });\n  };\n\n  // Placeholder for CSV download\n  const downloadCSV = () => console.log('Download CSV placeholder');\n\n  // On mount: fetch sensors & set default filters rounded to nearest 5 minutes\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const roundToNearest5Min = date => {\n      const ms = date.getTime();\n      const step = 1000 * 60 * 5;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = new Date();\n    const roundedNow = roundToNearest5Min(now);\n    const startObj = roundToNearest5Min(new Date(roundedNow.getTime() - 12 * 3600 * 1000));\n    setStartDate(`${startObj.getFullYear()}-${pad(startObj.getMonth() + 1)}-${pad(startObj.getDate())}`);\n    setStartTime(`${pad(startObj.getHours())}:${pad(startObj.getMinutes())}`);\n    setEndDate(`${roundedNow.getFullYear()}-${pad(roundedNow.getMonth() + 1)}-${pad(roundedNow.getDate())}`);\n    setEndTime(`${pad(roundedNow.getHours())}:${pad(roundedNow.getMinutes())}`);\n\n    // Initialize axis inputs blank so x-axis auto fits initially\n    setXMinStr('');\n    setXMaxStr('');\n    setYMin('');\n    setYMax('');\n    fetch(`${apiUrl}/sensors`).then(res => res.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // Fetch and process data when filters change\n  useEffect(() => {\n    if (!initialized) return;\n    const params = new URLSearchParams();\n    if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n    if (startDate) params.append('startDate', startDate);\n    if (startTime) params.append('startTime', startTime);\n    if (endDate) params.append('endDate', endDate);\n    if (endTime) params.append('endTime', endTime);\n    fetch(`${apiUrl}/sensorData/filter?${params.toString()}`).then(res => res.json()).then(result => {\n      // Group by timestamp\n      const grouped = {};\n      result.forEach(item => {\n        const ts = new Date(item.local).getTime();\n        if (!grouped[ts]) grouped[ts] = {\n          timestamp: ts\n        };\n        grouped[ts][item.sensor_id] = parseFloat(item.reading);\n      });\n      const dataArr = Object.values(grouped);\n\n      // Compute x-axis domain based on data\n      const timestamps = dataArr.map(d => d.timestamp);\n      const minTs = Math.min(...timestamps);\n      const maxTs = Math.max(...timestamps);\n      const formatTime = ms => new Date(ms).toLocaleTimeString('en-GB', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n      setXMinStr(formatTime(minTs));\n      setXMaxStr(formatTime(maxTs));\n\n      // Compute y-axis domain: min 0, max rounded up to nearest 5\n      const readings = result.map(item => parseFloat(item.reading));\n      const maxReading = readings.length ? Math.max(...readings) : 0;\n      const roundedMax = Math.ceil(maxReading / 5) * 5;\n      setYMin('0');\n      setYMax(roundedMax.toString());\n\n      // Update chart data\n      setData(dataArr);\n    }).catch(console.error);\n  }, [startDate, startTime, endDate, endTime, selectedSensors, initialized, apiUrl]);\n\n  // Color palette for sensor lines\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          children: sensors.map(sensor => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(sensor.sensor_id),\n              onChange: () => toggleSensor(sensor.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), sensor.name]\n          }, sensor.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date and Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-selector\",\n          style: {\n            display: 'flex',\n            gap: '24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 12\n              },\n              children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginLeft: 12\n              },\n              children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [\"X Min:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              step: \"1\",\n              value: xMinStr,\n              onChange: e => setXMinStr(e.target.value),\n              style: {\n                marginLeft: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"X Max:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              step: \"1\",\n              value: xMaxStr,\n              onChange: e => setXMaxStr(e.target.value),\n              style: {\n                marginLeft: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [\"Y Min:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.1\",\n              value: yMin,\n              onChange: e => setYMin(e.target.value),\n              style: {\n                marginLeft: 4,\n                width: 80\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Y Max:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.1\",\n              value: yMax,\n              onChange: e => setYMax(e.target.value),\n              style: {\n                marginLeft: 4,\n                width: 80\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadCSV,\n          style: {\n            marginTop: 12\n          },\n          children: \"Download as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [xMinStr ? new Date(`${startDate}T${xMinStr}`).getTime() : 'auto', xMaxStr ? new Date(`${endDate}T${xMaxStr}`).getTime() : 'auto'],\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMin !== '' ? Number(yMin) : 'auto', yMax !== '' ? Number(yMax) : 'auto'],\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), sensors.filter(s => selectedSensors.includes(s.sensor_id)).map((sensor, idx) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: sensor.sensor_id,\n          name: sensor.name,\n          stroke: colors[idx % colors.length],\n          dot: false\n        }, sensor.sensor_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"//BzszhGchvSlP0gk/UOZeR42Gw=\");\n_c2 = LineGraph;\nexport default LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","timeLabel","Date","toLocaleTimeString","hour12","hour","minute","second","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","value","dataKey","_c","LineGraph","_s","data","setData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","xMinStr","setXMinStr","xMaxStr","setXMaxStr","yMin","setYMin","yMax","setYMax","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","sensorId","prev","includes","filter","id","downloadCSV","console","log","pad","n","String","padStart","roundToNearest5Min","date","ms","getTime","step","Math","floor","now","roundedNow","startObj","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","res","json","list","s","sensor_id","catch","error","params","URLSearchParams","append","join","toString","result","grouped","forEach","item","ts","local","timestamp","parseFloat","reading","dataArr","Object","values","timestamps","d","minTs","min","maxTs","max","formatTime","readings","maxReading","roundedMax","ceil","colors","width","height","className","sensor","marginRight","type","checked","onChange","display","gap","e","target","marginLeft","onClick","marginTop","margin","top","right","bottom","left","strokeDasharray","domain","tickFormatter","position","offset","Number","angle","dy","content","verticalAlign","idx","stroke","dot","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip to display multiple sensor readings with formatted time\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || payload.length === 0) return null;\n    const timeLabel = new Date(label).toLocaleTimeString('en-GB', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n    });\n    return (\n        <div style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '0.5rem', color: '#000' }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>Time: {timeLabel}</div>\n            {payload.map((entry) => (\n                <div key={entry.dataKey} style={{ color: entry.color, fontWeight: 'bold' }}>\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nfunction LineGraph() {\n    // Core state\n    const [data, setData] = useState([]);\n    const [sensors, setSensors] = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n    const [initialized, setInitialized] = useState(false);\n\n    // Date/time filters (local, rounded on mount)\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [endTime, setEndTime] = useState('');\n\n    // Axis domain customizations\n    const [xMinStr, setXMinStr] = useState('');\n    const [xMaxStr, setXMaxStr] = useState('');\n    const [yMin, setYMin] = useState('');\n    const [yMax, setYMax] = useState('');\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // Toggle sensor selection (at least one remains)\n    const toggleSensor = (sensorId) => {\n        setSelectedSensors((prev) => {\n            if (prev.includes(sensorId)) {\n                if (prev.length === 1) return prev;\n                return prev.filter((id) => id !== sensorId);\n            }\n            return [...prev, sensorId];\n        });\n    };\n\n    // Placeholder for CSV download\n    const downloadCSV = () => console.log('Download CSV placeholder');\n\n    // On mount: fetch sensors & set default filters rounded to nearest 5 minutes\n    useEffect(() => {\n        const pad = (n) => String(n).padStart(2, '0');\n        const roundToNearest5Min = (date) => {\n            const ms = date.getTime();\n            const step = 1000 * 60 * 5;\n            return new Date(Math.floor(ms / step) * step);\n        };\n\n        const now = new Date();\n        const roundedNow = roundToNearest5Min(now);\n        const startObj = roundToNearest5Min(new Date(roundedNow.getTime() - 12 * 3600 * 1000));\n\n        setStartDate(`${startObj.getFullYear()}-${pad(startObj.getMonth() + 1)}-${pad(startObj.getDate())}`);\n        setStartTime(`${pad(startObj.getHours())}:${pad(startObj.getMinutes())}`);\n        setEndDate(`${roundedNow.getFullYear()}-${pad(roundedNow.getMonth() + 1)}-${pad(roundedNow.getDate())}`);\n        setEndTime(`${pad(roundedNow.getHours())}:${pad(roundedNow.getMinutes())}`);\n\n        // Initialize axis inputs blank so x-axis auto fits initially\n        setXMinStr('');\n        setXMaxStr('');\n        setYMin('');\n        setYMax('');\n\n        fetch(`${apiUrl}/sensors`)\n            .then((res) => res.json())\n            .then((list) => {\n                setSensors(list);\n                setSelectedSensors(list.map((s) => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Fetch and process data when filters change\n    useEffect(() => {\n        if (!initialized) return;\n        const params = new URLSearchParams();\n        if (selectedSensors.length) params.append('sensor', selectedSensors.join(','));\n        if (startDate) params.append('startDate', startDate);\n        if (startTime) params.append('startTime', startTime);\n        if (endDate) params.append('endDate', endDate);\n        if (endTime) params.append('endTime', endTime);\n\n        fetch(`${apiUrl}/sensorData/filter?${params.toString()}`)\n            .then((res) => res.json())\n            .then((result) => {\n                // Group by timestamp\n                const grouped = {};\n                result.forEach((item) => {\n                    const ts = new Date(item.local).getTime();\n                    if (!grouped[ts]) grouped[ts] = { timestamp: ts };\n                    grouped[ts][item.sensor_id] = parseFloat(item.reading);\n                });\n                const dataArr = Object.values(grouped);\n\n                // Compute x-axis domain based on data\n                const timestamps = dataArr.map((d) => d.timestamp);\n                const minTs = Math.min(...timestamps);\n                const maxTs = Math.max(...timestamps);\n                const formatTime = (ms) =>\n                    new Date(ms).toLocaleTimeString('en-GB', {\n                        hour12: false,\n                        hour: '2-digit',\n                        minute: '2-digit',\n                        second: '2-digit',\n                    });\n                setXMinStr(formatTime(minTs));\n                setXMaxStr(formatTime(maxTs));\n\n                // Compute y-axis domain: min 0, max rounded up to nearest 5\n                const readings = result.map((item) => parseFloat(item.reading));\n                const maxReading = readings.length ? Math.max(...readings) : 0;\n                const roundedMax = Math.ceil(maxReading / 5) * 5;\n                setYMin('0');\n                setYMax(roundedMax.toString());\n\n                // Update chart data\n                setData(dataArr);\n            })\n            .catch(console.error);\n    }, [startDate, startTime, endDate, endTime, selectedSensors, initialized, apiUrl]);\n\n    // Color palette for sensor lines\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            <div className=\"menuContainer\">\n                {/* Sensor selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div className=\"sensor-options\">\n                        {sensors.map((sensor) => (\n                            <label key={sensor.sensor_id} style={{ marginRight: 12 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(sensor.sensor_id)}\n                                    onChange={() => toggleSensor(sensor.sensor_id)}\n                                />\n                                {sensor.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n                {/* Date & range filters */}\n                <section className=\"section2\">\n                    <h4>Date and Range</h4>\n                    <div className=\"range-selector\" style={{ display: 'flex', gap: '24px' }}>\n                        <div>\n                            <label>\n                                Start Date:\n                                <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n                            </label>\n                            <label style={{ marginLeft: 12 }}>\n                                Start Time:\n                                <input type=\"time\" step=\"300\" value={startTime} onChange={(e) => setStartTime(e.target.value)} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                                End Date:\n                                <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n                            </label>\n                            <label style={{ marginLeft: 12 }}>\n                                End Time:\n                                <input type=\"time\" step=\"300\" value={endTime} onChange={(e) => setEndTime(e.target.value)} />\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Axis customization and CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n                    <div style={{ marginBottom: 8 }}>\n                        <label style={{ marginRight: 12 }}>\n                            X Min:\n                            <input\n                                type=\"time\"\n                                step=\"1\"\n                                value={xMinStr}\n                                onChange={(e) => setXMinStr(e.target.value)}\n                                style={{ marginLeft: 4 }}\n                            />\n                        </label>\n                        <label>\n                            X Max:\n                            <input\n                                type=\"time\"\n                                step=\"1\"\n                                value={xMaxStr}\n                                onChange={(e) => setXMaxStr(e.target.value)}\n                                style={{ marginLeft: 4 }}\n                            />\n                        </label>\n                    </div>\n                    <div>\n                        <label style={{ marginRight: 12 }}>\n                            Y Min:\n                            <input\n                                type=\"number\"\n                                step=\"0.1\"\n                                value={yMin}\n                                onChange={(e) => setYMin(e.target.value)}\n                                style={{ marginLeft: 4, width: 80 }}\n                            />\n                        </label>\n                        <label>\n                            Y Max:\n                            <input\n                                type=\"number\"\n                                step=\"0.1\"\n                                value={yMax}\n                                onChange={(e) => setYMax(e.target.value)}\n                                style={{ marginLeft: 4, width: 80 }}\n                            />\n                        </label>\n                    </div>\n                    <button onClick={downloadCSV} style={{ marginTop: 12 }}>\n                        Download as CSV\n                    </button>\n                </section>\n            </div>\n\n            {/* Chart */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={data} margin={{ top: 20, right: 10, bottom: 80, left: 10 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[\n                            xMinStr ? new Date(`${startDate}T${xMinStr}`).getTime() : 'auto',\n                            xMaxStr ? new Date(`${endDate}T${xMaxStr}`).getTime() : 'auto',\n                        ]}\n                        tickFormatter={(ms) =>\n                            new Date(ms).toLocaleTimeString('en-GB', {\n                                hour12: false,\n                                hour: '2-digit',\n                                minute: '2-digit',\n                                second: '2-digit',\n                            })\n                        }\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMin !== '' ? Number(yMin) : 'auto', yMax !== '' ? Number(yMax) : 'auto']}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n                    {sensors\n                        .filter((s) => selectedSensors.includes(s.sensor_id))\n                        .map((sensor, idx) => (\n                            <Line\n                                key={sensor.sensor_id}\n                                type=\"monotone\"\n                                dataKey={sensor.sensor_id}\n                                name={sensor.name}\n                                stroke={colors[idx % colors.length]}\n                                dot={false}\n                            />\n                        ))}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default LineGraph;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QAChB,UAAU;AACjB,OAAO,uBAAuB;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAClD,IAAI,CAACF,MAAM,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAC5D,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACH,KAAK,CAAC,CAACI,kBAAkB,CAAC,OAAO,EAAE;IAC1DC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,oBACIZ,OAAA;IAAKa,KAAK,EAAE;MAAEC,eAAe,EAAE,MAAM;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,OAAO,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChGlB,OAAA;MAAKa,KAAK,EAAE;QAAEM,UAAU,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAF,QAAA,GAAC,QAAM,EAACZ,SAAS;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3ErB,OAAO,CAACsB,GAAG,CAAEC,KAAK,iBACf1B,OAAA;MAAyBa,KAAK,EAAE;QAAEI,KAAK,EAAES,KAAK,CAACT,KAAK;QAAEE,UAAU,EAAE;MAAO,CAAE;MAAAD,QAAA,GACtEQ,KAAK,CAACC,IAAI,EAAC,IAAE,EAACD,KAAK,CAACE,KAAK;IAAA,GADpBF,KAAK,CAACG,OAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACM,EAAA,GAlBI7B,aAAa;AAoBnB,SAAS8B,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwD,OAAO,EAAEC,UAAU,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0D,OAAO,EAAEC,UAAU,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAM,CAAC4D,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8D,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgE,IAAI,EAAEC,OAAO,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkE,IAAI,EAAEC,OAAO,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMoE,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;EAEvE;EACA,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IAC/BxB,kBAAkB,CAAEyB,IAAI,IAAK;MACzB,IAAIA,IAAI,CAACC,QAAQ,CAACF,QAAQ,CAAC,EAAE;QACzB,IAAIC,IAAI,CAAC1D,MAAM,KAAK,CAAC,EAAE,OAAO0D,IAAI;QAClC,OAAOA,IAAI,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,QAAQ,CAAC;MAC/C;MACA,OAAO,CAAC,GAAGC,IAAI,EAAED,QAAQ,CAAC;IAC9B,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;;EAEjE;EACA/E,SAAS,CAAC,MAAM;IACZ,MAAMgF,GAAG,GAAIC,CAAC,IAAKC,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7C,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;MACjC,MAAMC,EAAE,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC;MACzB,MAAMC,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC;MAC1B,OAAO,IAAIvE,IAAI,CAACwE,IAAI,CAACC,KAAK,CAACJ,EAAE,GAAGE,IAAI,CAAC,GAAGA,IAAI,CAAC;IACjD,CAAC;IAED,MAAMG,GAAG,GAAG,IAAI1E,IAAI,CAAC,CAAC;IACtB,MAAM2E,UAAU,GAAGR,kBAAkB,CAACO,GAAG,CAAC;IAC1C,MAAME,QAAQ,GAAGT,kBAAkB,CAAC,IAAInE,IAAI,CAAC2E,UAAU,CAACL,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IAEtFnC,YAAY,CAAC,GAAGyC,QAAQ,CAACC,WAAW,CAAC,CAAC,IAAId,GAAG,CAACa,QAAQ,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAIf,GAAG,CAACa,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IACpG1C,YAAY,CAAC,GAAG0B,GAAG,CAACa,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC,IAAIjB,GAAG,CAACa,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IACzE1C,UAAU,CAAC,GAAGoC,UAAU,CAACE,WAAW,CAAC,CAAC,IAAId,GAAG,CAACY,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAIf,GAAG,CAACY,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IACxGtC,UAAU,CAAC,GAAGsB,GAAG,CAACY,UAAU,CAACK,QAAQ,CAAC,CAAC,CAAC,IAAIjB,GAAG,CAACY,UAAU,CAACM,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;;IAE3E;IACAtC,UAAU,CAAC,EAAE,CAAC;IACdE,UAAU,CAAC,EAAE,CAAC;IACdE,OAAO,CAAC,EAAE,CAAC;IACXE,OAAO,CAAC,EAAE,CAAC;IAEXiC,KAAK,CAAC,GAAGhC,MAAM,UAAU,CAAC,CACrBiC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACZzD,UAAU,CAACyD,IAAI,CAAC;MAChBvD,kBAAkB,CAACuD,IAAI,CAACpE,GAAG,CAAEqE,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC,CAAC;MAChDvD,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDwD,KAAK,CAAC5B,OAAO,CAAC6B,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACxC,MAAM,CAAC,CAAC;;EAEZ;EACAnE,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiD,WAAW,EAAE;IAClB,MAAM2D,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAI9D,eAAe,CAAChC,MAAM,EAAE6F,MAAM,CAACE,MAAM,CAAC,QAAQ,EAAE/D,eAAe,CAACgE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9E,IAAI5D,SAAS,EAAEyD,MAAM,CAACE,MAAM,CAAC,WAAW,EAAE3D,SAAS,CAAC;IACpD,IAAIE,SAAS,EAAEuD,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEzD,SAAS,CAAC;IACpD,IAAIE,OAAO,EAAEqD,MAAM,CAACE,MAAM,CAAC,SAAS,EAAEvD,OAAO,CAAC;IAC9C,IAAIE,OAAO,EAAEmD,MAAM,CAACE,MAAM,CAAC,SAAS,EAAErD,OAAO,CAAC;IAE9C0C,KAAK,CAAC,GAAGhC,MAAM,sBAAsByC,MAAM,CAACI,QAAQ,CAAC,CAAC,EAAE,CAAC,CACpDZ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEa,MAAM,IAAK;MACd;MACA,MAAMC,OAAO,GAAG,CAAC,CAAC;MAClBD,MAAM,CAACE,OAAO,CAAEC,IAAI,IAAK;QACrB,MAAMC,EAAE,GAAG,IAAIpG,IAAI,CAACmG,IAAI,CAACE,KAAK,CAAC,CAAC/B,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC2B,OAAO,CAACG,EAAE,CAAC,EAAEH,OAAO,CAACG,EAAE,CAAC,GAAG;UAAEE,SAAS,EAAEF;QAAG,CAAC;QACjDH,OAAO,CAACG,EAAE,CAAC,CAACD,IAAI,CAACX,SAAS,CAAC,GAAGe,UAAU,CAACJ,IAAI,CAACK,OAAO,CAAC;MAC1D,CAAC,CAAC;MACF,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACV,OAAO,CAAC;;MAEtC;MACA,MAAMW,UAAU,GAAGH,OAAO,CAACvF,GAAG,CAAE2F,CAAC,IAAKA,CAAC,CAACP,SAAS,CAAC;MAClD,MAAMQ,KAAK,GAAGtC,IAAI,CAACuC,GAAG,CAAC,GAAGH,UAAU,CAAC;MACrC,MAAMI,KAAK,GAAGxC,IAAI,CAACyC,GAAG,CAAC,GAAGL,UAAU,CAAC;MACrC,MAAMM,UAAU,GAAI7C,EAAE,IAClB,IAAIrE,IAAI,CAACqE,EAAE,CAAC,CAACpE,kBAAkB,CAAC,OAAO,EAAE;QACrCC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACZ,CAAC,CAAC;MACNsC,UAAU,CAACuE,UAAU,CAACJ,KAAK,CAAC,CAAC;MAC7BjE,UAAU,CAACqE,UAAU,CAACF,KAAK,CAAC,CAAC;;MAE7B;MACA,MAAMG,QAAQ,GAAGnB,MAAM,CAAC9E,GAAG,CAAEiF,IAAI,IAAKI,UAAU,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC;MAC/D,MAAMY,UAAU,GAAGD,QAAQ,CAACrH,MAAM,GAAG0E,IAAI,CAACyC,GAAG,CAAC,GAAGE,QAAQ,CAAC,GAAG,CAAC;MAC9D,MAAME,UAAU,GAAG7C,IAAI,CAAC8C,IAAI,CAACF,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;MAChDrE,OAAO,CAAC,GAAG,CAAC;MACZE,OAAO,CAACoE,UAAU,CAACtB,QAAQ,CAAC,CAAC,CAAC;;MAE9B;MACApE,OAAO,CAAC8E,OAAO,CAAC;IACpB,CAAC,CAAC,CACDhB,KAAK,CAAC5B,OAAO,CAAC6B,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACxD,SAAS,EAAEE,SAAS,EAAEE,OAAO,EAAEE,OAAO,EAAEV,eAAe,EAAEE,WAAW,EAAEkB,MAAM,CAAC,CAAC;;EAElF;EACA,MAAMqE,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEtE,oBACI9H,OAAA;IAAKa,KAAK,EAAE;MAAEkH,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAA9G,QAAA,gBACvClB,OAAA;MAAKiI,SAAS,EAAC,eAAe;MAAA/G,QAAA,gBAE1BlB,OAAA;QAASiI,SAAS,EAAC,UAAU;QAAA/G,QAAA,gBACzBlB,OAAA;UAAAkB,QAAA,EAAI;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBxB,OAAA;UAAKiI,SAAS,EAAC,gBAAgB;UAAA/G,QAAA,EAC1BiB,OAAO,CAACV,GAAG,CAAEyG,MAAM,iBAChBlI,OAAA;YAA8Ba,KAAK,EAAE;cAAEsH,WAAW,EAAE;YAAG,CAAE;YAAAjH,QAAA,gBACrDlB,OAAA;cACIoI,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEhG,eAAe,CAAC2B,QAAQ,CAACkE,MAAM,CAACnC,SAAS,CAAE;cACpDuC,QAAQ,EAAEA,CAAA,KAAMzE,YAAY,CAACqE,MAAM,CAACnC,SAAS;YAAE;cAAA1E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,EACD0G,MAAM,CAACvG,IAAI;UAAA,GANJuG,MAAM,CAACnC,SAAS;YAAA1E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOrB,CACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGVxB,OAAA;QAASiI,SAAS,EAAC,UAAU;QAAA/G,QAAA,gBACzBlB,OAAA;UAAAkB,QAAA,EAAI;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBxB,OAAA;UAAKiI,SAAS,EAAC,gBAAgB;UAACpH,KAAK,EAAE;YAAE0H,OAAO,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAO,CAAE;UAAAtH,QAAA,gBACpElB,OAAA;YAAAkB,QAAA,gBACIlB,OAAA;cAAAkB,QAAA,GAAO,aAEH,eAAAlB,OAAA;gBAAOoI,IAAI,EAAC,MAAM;gBAACxG,KAAK,EAAEa,SAAU;gBAAC6F,QAAQ,EAAGG,CAAC,IAAK/F,YAAY,CAAC+F,CAAC,CAACC,MAAM,CAAC9G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnF,CAAC,eACRxB,OAAA;cAAOa,KAAK,EAAE;gBAAE8H,UAAU,EAAE;cAAG,CAAE;cAAAzH,QAAA,GAAC,aAE9B,eAAAlB,OAAA;gBAAOoI,IAAI,EAAC,MAAM;gBAACtD,IAAI,EAAC,KAAK;gBAAClD,KAAK,EAAEe,SAAU;gBAAC2F,QAAQ,EAAGG,CAAC,IAAK7F,YAAY,CAAC6F,CAAC,CAACC,MAAM,CAAC9G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACNxB,OAAA;YAAAkB,QAAA,gBACIlB,OAAA;cAAAkB,QAAA,GAAO,WAEH,eAAAlB,OAAA;gBAAOoI,IAAI,EAAC,MAAM;gBAACxG,KAAK,EAAEiB,OAAQ;gBAACyF,QAAQ,EAAGG,CAAC,IAAK3F,UAAU,CAAC2F,CAAC,CAACC,MAAM,CAAC9G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CAAC,eACRxB,OAAA;cAAOa,KAAK,EAAE;gBAAE8H,UAAU,EAAE;cAAG,CAAE;cAAAzH,QAAA,GAAC,WAE9B,eAAAlB,OAAA;gBAAOoI,IAAI,EAAC,MAAM;gBAACtD,IAAI,EAAC,KAAK;gBAAClD,KAAK,EAAEmB,OAAQ;gBAACuF,QAAQ,EAAGG,CAAC,IAAKzF,UAAU,CAACyF,CAAC,CAACC,MAAM,CAAC9G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGVxB,OAAA;QAASiI,SAAS,EAAC,UAAU;QAAA/G,QAAA,gBACzBlB,OAAA;UAAAkB,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBxB,OAAA;UAAKa,KAAK,EAAE;YAAEO,YAAY,EAAE;UAAE,CAAE;UAAAF,QAAA,gBAC5BlB,OAAA;YAAOa,KAAK,EAAE;cAAEsH,WAAW,EAAE;YAAG,CAAE;YAAAjH,QAAA,GAAC,QAE/B,eAAAlB,OAAA;cACIoI,IAAI,EAAC,MAAM;cACXtD,IAAI,EAAC,GAAG;cACRlD,KAAK,EAAEqB,OAAQ;cACfqF,QAAQ,EAAGG,CAAC,IAAKvF,UAAU,CAACuF,CAAC,CAACC,MAAM,CAAC9G,KAAK,CAAE;cAC5Cf,KAAK,EAAE;gBAAE8H,UAAU,EAAE;cAAE;YAAE;cAAAtH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRxB,OAAA;YAAAkB,QAAA,GAAO,QAEH,eAAAlB,OAAA;cACIoI,IAAI,EAAC,MAAM;cACXtD,IAAI,EAAC,GAAG;cACRlD,KAAK,EAAEuB,OAAQ;cACfmF,QAAQ,EAAGG,CAAC,IAAKrF,UAAU,CAACqF,CAAC,CAACC,MAAM,CAAC9G,KAAK,CAAE;cAC5Cf,KAAK,EAAE;gBAAE8H,UAAU,EAAE;cAAE;YAAE;cAAAtH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNxB,OAAA;UAAAkB,QAAA,gBACIlB,OAAA;YAAOa,KAAK,EAAE;cAAEsH,WAAW,EAAE;YAAG,CAAE;YAAAjH,QAAA,GAAC,QAE/B,eAAAlB,OAAA;cACIoI,IAAI,EAAC,QAAQ;cACbtD,IAAI,EAAC,KAAK;cACVlD,KAAK,EAAEyB,IAAK;cACZiF,QAAQ,EAAGG,CAAC,IAAKnF,OAAO,CAACmF,CAAC,CAACC,MAAM,CAAC9G,KAAK,CAAE;cACzCf,KAAK,EAAE;gBAAE8H,UAAU,EAAE,CAAC;gBAAEZ,KAAK,EAAE;cAAG;YAAE;cAAA1G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRxB,OAAA;YAAAkB,QAAA,GAAO,QAEH,eAAAlB,OAAA;cACIoI,IAAI,EAAC,QAAQ;cACbtD,IAAI,EAAC,KAAK;cACVlD,KAAK,EAAE2B,IAAK;cACZ+E,QAAQ,EAAGG,CAAC,IAAKjF,OAAO,CAACiF,CAAC,CAACC,MAAM,CAAC9G,KAAK,CAAE;cACzCf,KAAK,EAAE;gBAAE8H,UAAU,EAAE,CAAC;gBAAEZ,KAAK,EAAE;cAAG;YAAE;cAAA1G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACNxB,OAAA;UAAQ4I,OAAO,EAAEzE,WAAY;UAACtD,KAAK,EAAE;YAAEgI,SAAS,EAAE;UAAG,CAAE;UAAA3H,QAAA,EAAC;QAExD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAGNxB,OAAA,CAACF,mBAAmB;MAACiI,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAA9G,QAAA,eAC3ClB,OAAA,CAACT,SAAS;QAAC0C,IAAI,EAAEA,IAAK;QAAC6G,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAE;QAAAhI,QAAA,gBACxElB,OAAA,CAACL,aAAa;UAACwJ,eAAe,EAAC;QAAK;UAAA9H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCxB,OAAA,CAACP,KAAK;UACFoC,OAAO,EAAC,WAAW;UACnBuG,IAAI,EAAC,QAAQ;UACbgB,MAAM,EAAE,CACJnG,OAAO,GAAG,IAAI1C,IAAI,CAAC,GAAGkC,SAAS,IAAIQ,OAAO,EAAE,CAAC,CAAC4B,OAAO,CAAC,CAAC,GAAG,MAAM,EAChE1B,OAAO,GAAG,IAAI5C,IAAI,CAAC,GAAGsC,OAAO,IAAIM,OAAO,EAAE,CAAC,CAAC0B,OAAO,CAAC,CAAC,GAAG,MAAM,CAChE;UACFwE,aAAa,EAAGzE,EAAE,IACd,IAAIrE,IAAI,CAACqE,EAAE,CAAC,CAACpE,kBAAkB,CAAC,OAAO,EAAE;YACrCC,MAAM,EAAE,KAAK;YACbC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE,SAAS;YACjBC,MAAM,EAAE;UACZ,CAAC,CACJ;UACDR,KAAK,EAAE;YAAEwB,KAAK,EAAE,YAAY;YAAE0H,QAAQ,EAAE,QAAQ;YAAEC,MAAM,EAAE,EAAE;YAAE1I,KAAK,EAAE;cAAEM,UAAU,EAAE;YAAO;UAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,eACFxB,OAAA,CAACN,KAAK;UACF0J,MAAM,EAAE,CAAC/F,IAAI,KAAK,EAAE,GAAGmG,MAAM,CAACnG,IAAI,CAAC,GAAG,MAAM,EAAEE,IAAI,KAAK,EAAE,GAAGiG,MAAM,CAACjG,IAAI,CAAC,GAAG,MAAM,CAAE;UACnFnD,KAAK,EAAE;YAAEwB,KAAK,EAAE,aAAa;YAAE6H,KAAK,EAAE,CAAC,EAAE;YAAEH,QAAQ,EAAE,YAAY;YAAEI,EAAE,EAAE,EAAE;YAAE7I,KAAK,EAAE;cAAEM,UAAU,EAAE;YAAO;UAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9G,CAAC,eACFxB,OAAA,CAACJ,OAAO;UAAC+J,OAAO,eAAE3J,OAAA,CAACC,aAAa;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCxB,OAAA,CAACH,MAAM;UAAC+J,aAAa,EAAC;QAAK;UAAAvI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7BW,OAAO,CACH8B,MAAM,CAAE6B,CAAC,IAAKzD,eAAe,CAAC2B,QAAQ,CAAC8B,CAAC,CAACC,SAAS,CAAC,CAAC,CACpDtE,GAAG,CAAC,CAACyG,MAAM,EAAE2B,GAAG,kBACb7J,OAAA,CAACR,IAAI;UAED4I,IAAI,EAAC,UAAU;UACfvG,OAAO,EAAEqG,MAAM,CAACnC,SAAU;UAC1BpE,IAAI,EAAEuG,MAAM,CAACvG,IAAK;UAClBmI,MAAM,EAAEhC,MAAM,CAAC+B,GAAG,GAAG/B,MAAM,CAACzH,MAAM,CAAE;UACpC0J,GAAG,EAAE;QAAM,GALN7B,MAAM,CAACnC,SAAS;UAAA1E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMxB,CACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd;AAACQ,EAAA,CAxQQD,SAAS;AAAAiI,GAAA,GAATjI,SAAS;AA0QlB,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAkI,GAAA;AAAAC,YAAA,CAAAnI,EAAA;AAAAmI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}