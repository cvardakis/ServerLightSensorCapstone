{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/SensorStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SensorStatus.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SensorStatus() {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [latestMeasurement, setLatestMeasurement] = useState(null);\n  useEffect(() => {\n    // Use the real API call in production\n    fetch('http://localhost/sensorData/latest').then(res => res.json()).then(handleData).catch(err => console.error('Error fetching sensor status:', err));\n  }, []);\n  function handleData(data) {\n    setLatestMeasurement(data);\n    if (data && data.timestamp) {\n      const reportedTime = new Date(data.timestamp);\n      const now = new Date();\n      const diffMinutes = (now - reportedTime) / 1000 / 60;\n      setStatus(diffMinutes <= 10 ? 'online' : 'offline');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sensor Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: status === 'online' ? 'green' : 'red',\n        color: 'white',\n        padding: '10px'\n      },\n      children: status ? status === 'online' ? 'Online' : 'Offline' : 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), latestMeasurement && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Latest Measurement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 60\n        }, this), latestMeasurement.value, \" mag/arcsec\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"UTC Timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 55\n        }, this), new Date(latestMeasurement.timestamp).toLocaleString('en-GB', {\n          hour12: false,\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(SensorStatus, \"r5ZNB+rLk0gPit0X0dL+uYaJZx0=\");\n_c = SensorStatus;\nexport default SensorStatus;\nvar _c;\n$RefreshReg$(_c, \"SensorStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SensorStatus","_s","status","setStatus","latestMeasurement","setLatestMeasurement","fetch","then","res","json","handleData","catch","err","console","error","data","timestamp","reportedTime","Date","now","diffMinutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","color","padding","value","toLocaleString","hour12","year","month","day","hour","minute","second","_c","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/SensorStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SensorStatus.css'\n\nfunction SensorStatus() {\n    const [status, setStatus] = useState(null);\n    const [latestMeasurement, setLatestMeasurement] = useState(null);\n\n    useEffect(() => {\n        // Use the real API call in production\n        fetch('http://localhost/sensorData/latest')\n            .then((res) => res.json())\n            .then(handleData)\n            .catch((err) => console.error('Error fetching sensor status:', err));\n\n    }, []);\n\n    function handleData(data) {\n        setLatestMeasurement(data);\n        if (data && data.timestamp) {\n            const reportedTime = new Date(data.timestamp);\n            const now = new Date();\n            const diffMinutes = (now - reportedTime) / 1000 / 60;\n            setStatus(diffMinutes <= 10 ? 'online' : 'offline');\n        }\n    }\n\n    return (\n        <div className=\"sensor-card\">\n            <h2>Sensor Name</h2>\n            <button\n                style={{\n                    background: status === 'online' ? 'green' : 'red',\n                    color: 'white',\n                    padding: '10px'\n                }}\n            >\n                {status ? (status === 'online' ? 'Online' : 'Offline') : 'Loading...'}\n            </button>\n            {latestMeasurement && (\n                <div>\n                    <p>\n                        <strong>Latest Measurement</strong><br/>\n                        {latestMeasurement.value} mag/arcsec<sup>2</sup>\n                    </p>\n                    <p>\n                        <strong>UTC Timestamp</strong><br/>\n                        {new Date(latestMeasurement.timestamp).toLocaleString('en-GB', {\n                            hour12: false,\n                            year: 'numeric',\n                            month: '2-digit',\n                            day: '2-digit',\n                            hour: '2-digit',\n                            minute: '2-digit',\n                            second: '2-digit'\n                        })}\n                    </p>\n\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SensorStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}