{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip with finite‐check on the timestamp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (!active || !(payload !== null && payload !== void 0 && payload.length)) return null;\n\n  // coerce label to a number\n  const ts = typeof label === 'number' ? label : Number(label);\n  if (!isFinite(ts)) return null; // bail if invalid\n\n  const fmt = new Intl.DateTimeFormat('en-US', {\n    hour12: false,\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n  const timeLabel = fmt.format(ts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", timeLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomTooltip;\nexport default function LineGraph() {\n  _s();\n  const [data, setData] = useState([]); // pivoted for chart\n  const [rawData, setRawData] = useState([]); // for CSV\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  // date/time filters\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // y‑axis controls\n  const [yMin, setYMin] = useState('0');\n  const [yMax, setYMax] = useState('0');\n  const [yStep, setYStep] = useState(5);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n  // ensure at least one sensor remains selected\n  const toggleSensor = id => {\n    setSelectedSensors(prev => {\n      if (prev.includes(id)) {\n        return prev.length === 1 ? prev : prev.filter(x => x !== id);\n      }\n      return [...prev, id];\n    });\n  };\n\n  // CSV download\n  const downloadCSV = () => {\n    if (!rawData.length) return;\n    const idToName = Object.fromEntries(sensors.map(s => [s.sensor_id, s.name]));\n    const headers = Object.keys(rawData[0]).map(h => h === 'sensor_id' ? 'sensor_name' : h);\n    const rows = rawData.map(r => headers.map(h => {\n      var _idToName$r$sensor_id;\n      return h === 'sensor_name' ? (_idToName$r$sensor_id = idToName[r.sensor_id]) !== null && _idToName$r$sensor_id !== void 0 ? _idToName$r$sensor_id : r.sensor_id : r[h];\n    }));\n    const csv = [headers, ...rows].map(r => r.map(c => `\"${c}\"`).join(',')).join('\\r\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'Utah-skyscope-data.csv';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // on mount: round times, set filters, fetch sensors\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const round5 = d => {\n      const ms = d.getTime(),\n        step = 5 * 60 * 1000;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = round5(new Date());\n    const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n    setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth() + 1)}-${pad(ago12.getDate())}`);\n    setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n    setEndDate(`${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`);\n    setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n    fetch(`${apiUrl}/sensors`).then(r => r.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // fetch and pivot data whenever filters change\n  useEffect(() => {\n    if (!initialized) return;\n    const fetchAndPivot = () => {\n      const params = new URLSearchParams();\n      if (selectedSensors.length) params.set('sensor', selectedSensors.join(','));\n      if (startDate) params.set('startDate', startDate);\n      if (startTime) params.set('startTime', startTime);\n      if (endDate) params.set('endDate', endDate);\n      if (endTime) params.set('endTime', endTime);\n      fetch(`${apiUrl}/sensorData/filter?${params}`).then(r => r.json()).then(rows => {\n        setRawData(rows);\n        const map = {};\n        const allReadings = [];\n        rows.forEach(({\n          sensor_id,\n          local,\n          reading\n        }) => {\n          const ts = new Date(local).getTime();\n          map[ts] = map[ts] || {\n            timestamp: ts\n          };\n          map[ts][sensor_id] = parseFloat(reading);\n          allReadings.push(parseFloat(reading));\n        });\n        const chartArr = Object.values(map).sort((a, b) => a.timestamp - b.timestamp);\n        setData(chartArr);\n        const maxR = allReadings.length ? Math.max(...allReadings) : 0;\n        const ceilMax = Math.ceil(maxR / yStep) * yStep;\n        setYMin('0');\n        setYMax(String(ceilMax));\n      }).catch(console.error);\n    };\n    fetchAndPivot();\n    const iv = setInterval(fetchAndPivot, 60000);\n    return () => clearInterval(iv);\n  }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n  // compute tick domains\n  const startTs = startDate && startTime ? new Date(`${startDate}T${startTime}`).getTime() : 0;\n  const endTs = endDate && endTime ? new Date(`${endDate}T${endTime}`).getTime() : Date.now();\n  const xTicks = [];\n  let ft = new Date(startTs);\n  ft.setMinutes(0, 0, 0);\n  if (ft.getTime() < startTs) ft = new Date(ft.getTime() + 3600000);\n  for (let t = ft.getTime(); t <= endTs; t += 3600000) xTicks.push(t);\n  const yMinNum = Number(yMin),\n    yMaxNum = Number(yMax);\n  const yTicks = [];\n  for (let v = yMinNum; v <= yMaxNum; v += yStep) yTicks.push(v);\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          children: sensors.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(s.sensor_id),\n              onChange: () => toggleSensor(s.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), s.name]\n          }, s.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date & Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 24,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 24,\n            marginBottom: 8,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Min\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMin,\n                onChange: e => setYMin(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Max\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMax,\n                onChange: e => setYMax(e.target.value),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: yStep,\n                onChange: e => setYStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"1 unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"2 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadCSV,\n          children: \"Download as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        background: 'rgba(0,0,0,0.6)',\n        color: '#0f0',\n        padding: '0.5rem',\n        fontSize: 10,\n        maxHeight: 200,\n        overflowY: 'auto',\n        zIndex: 10\n      },\n      children: JSON.stringify(data.slice(0, 5), null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [startTs, endTs],\n          ticks: xTicks,\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMinNum, yMaxNum],\n          ticks: yTicks,\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), sensors.filter(s => selectedSensors.includes(s.sensor_id)).map((s, i) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: s.sensor_id,\n          name: s.name,\n          stroke: colors[i % colors.length],\n          dot: false\n        }, s.sensor_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"Geera6+vumorcytdwsdUnOjVjjw=\");\n_c2 = LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","ts","Number","isFinite","fmt","Intl","DateTimeFormat","hour12","month","day","hour","minute","timeLabel","format","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","value","dataKey","_c","LineGraph","_s","data","setData","rawData","setRawData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","yMin","setYMin","yMax","setYMax","yStep","setYStep","apiUrl","process","env","REACT_APP_API_URL","toggleSensor","id","prev","includes","filter","x","downloadCSV","idToName","Object","fromEntries","s","sensor_id","headers","keys","h","rows","r","_idToName$r$sensor_id","csv","c","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","pad","n","String","padStart","round5","d","ms","getTime","step","Date","Math","floor","now","ago12","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","json","list","catch","console","error","fetchAndPivot","params","URLSearchParams","set","allReadings","forEach","local","reading","timestamp","parseFloat","push","chartArr","values","sort","b","maxR","max","ceilMax","ceil","iv","setInterval","clearInterval","startTs","endTs","xTicks","ft","setMinutes","t","yMinNum","yMaxNum","yTicks","v","colors","width","height","className","marginRight","checked","onChange","display","gap","justifyContent","e","target","alignItems","onClick","position","top","right","background","fontSize","maxHeight","overflowY","zIndex","JSON","stringify","slice","margin","bottom","left","strokeDasharray","domain","ticks","tickFormatter","toLocaleTimeString","offset","angle","dy","content","verticalAlign","i","stroke","dot","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './ReactChartsLine.css';\n\n// Custom tooltip with finite‐check on the timestamp\nconst CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload?.length) return null;\n\n    // coerce label to a number\n    const ts = typeof label === 'number' ? label : Number(label);\n    if (!isFinite(ts)) return null;   // bail if invalid\n\n    const fmt = new Intl.DateTimeFormat('en-US', {\n        hour12: false,\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n    });\n    const timeLabel = fmt.format(ts);\n\n    return (\n        <div style={{ backgroundColor: '#fff', border: '1px solid #ccc', padding: '0.5rem', color: '#000' }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>Time: {timeLabel}</div>\n            {payload.map(entry => (\n                <div key={entry.dataKey} style={{ color: entry.color, fontWeight: 'bold' }}>\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default function LineGraph() {\n    const [data, setData] = useState([]);       // pivoted for chart\n    const [rawData, setRawData] = useState([]); // for CSV\n    const [sensors, setSensors] = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n    const [initialized, setInitialized] = useState(false);\n\n    // date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [endTime, setEndTime] = useState('');\n\n    // y‑axis controls\n    const [yMin, setYMin] = useState('0');\n    const [yMax, setYMax] = useState('0');\n    const [yStep, setYStep] = useState(5);\n\n    const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n    // ensure at least one sensor remains selected\n    const toggleSensor = id => {\n        setSelectedSensors(prev => {\n            if (prev.includes(id)) {\n                return prev.length === 1 ? prev : prev.filter(x => x !== id);\n            }\n            return [...prev, id];\n        });\n    };\n\n    // CSV download\n    const downloadCSV = () => {\n        if (!rawData.length) return;\n        const idToName = Object.fromEntries(sensors.map(s => [s.sensor_id, s.name]));\n        const headers = Object.keys(rawData[0]).map(h => h === 'sensor_id' ? 'sensor_name' : h);\n        const rows = rawData.map(r =>\n            headers.map(h =>\n                h === 'sensor_name'\n                    ? (idToName[r.sensor_id] ?? r.sensor_id)\n                    : r[h]\n            )\n        );\n        const csv = [headers, ...rows]\n            .map(r => r.map(c => `\"${c}\"`).join(','))\n            .join('\\r\\n');\n        const blob = new Blob([csv], { type: 'text/csv' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url; a.download = 'Utah-skyscope-data.csv';\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n        URL.revokeObjectURL(url);\n    };\n\n    // on mount: round times, set filters, fetch sensors\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = d => {\n            const ms = d.getTime(), step = 5 * 60 * 1000;\n            return new Date(Math.floor(ms / step) * step);\n        };\n        const now = round5(new Date());\n        const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n\n        setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth()+1)}-${pad(ago12.getDate())}`);\n        setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // fetch and pivot data whenever filters change\n    useEffect(() => {\n        if (!initialized) return;\n        const fetchAndPivot = () => {\n            const params = new URLSearchParams();\n            if (selectedSensors.length) params.set('sensor', selectedSensors.join(','));\n            if (startDate) params.set('startDate', startDate);\n            if (startTime) params.set('startTime', startTime);\n            if (endDate) params.set('endDate', endDate);\n            if (endTime) params.set('endTime', endTime);\n\n            fetch(`${apiUrl}/sensorData/filter?${params}`)\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    const map = {};\n                    const allReadings = [];\n                    rows.forEach(({ sensor_id, local, reading }) => {\n                        const ts = new Date(local).getTime();\n                        map[ts] = map[ts] || { timestamp: ts };\n                        map[ts][sensor_id] = parseFloat(reading);\n                        allReadings.push(parseFloat(reading));\n                    });\n                    const chartArr = Object.values(map).sort((a, b) => a.timestamp - b.timestamp);\n                    setData(chartArr);\n\n                    const maxR = allReadings.length ? Math.max(...allReadings) : 0;\n                    const ceilMax = Math.ceil(maxR / yStep) * yStep;\n                    setYMin('0');\n                    setYMax(String(ceilMax));\n                })\n                .catch(console.error);\n        };\n\n        fetchAndPivot();\n        const iv = setInterval(fetchAndPivot, 60_000);\n        return () => clearInterval(iv);\n    }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n    // compute tick domains\n    const startTs = startDate && startTime\n        ? new Date(`${startDate}T${startTime}`).getTime() : 0;\n    const endTs = endDate && endTime\n        ? new Date(`${endDate}T${endTime}`).getTime() : Date.now();\n\n    const xTicks = [];\n    let ft = new Date(startTs);\n    ft.setMinutes(0, 0, 0);\n    if (ft.getTime() < startTs) ft = new Date(ft.getTime() + 3600_000);\n    for (let t = ft.getTime(); t <= endTs; t += 3600_000) xTicks.push(t);\n\n    const yMinNum = Number(yMin), yMaxNum = Number(yMax);\n    const yTicks = [];\n    for (let v = yMinNum; v <= yMaxNum; v += yStep) yTicks.push(v);\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            <div className=\"menuContainer\">\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div className=\"sensor-options\">\n                        {sensors.map(s => (\n                            <label key={s.sensor_id} style={{ marginRight: 12 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n                <section className=\"section2\">\n                    <h4>Date & Range</h4>\n                    <div style={{ display: 'flex', gap: 24, justifyContent: 'center' }}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} />\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime} onChange={e => setStartTime(e.target.value)} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} />\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime} onChange={e => setEndTime(e.target.value)} />\n                            </label>\n                        </div>\n                    </div>\n                </section>\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 24, marginBottom: 8, justifyContent: 'center' }}>\n                        <div>\n                            <label>Y Min<br/>\n                                <input type=\"number\" value={yMin} onChange={e => setYMin(e.target.value)} style={{ width: 60 }} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input type=\"number\" value={yMax} onChange={e => setYMax(e.target.value)} style={{ width: 60 }} />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n                    <button onClick={downloadCSV}>Download as CSV</button>\n                </section>\n            </div>\n\n            {/* DEBUG: show first 5 chart points */}\n            <pre\n                style={{\n                    position: 'absolute',\n                    top: 0,\n                    right: 0,\n                    background: 'rgba(0,0,0,0.6)',\n                    color: '#0f0',\n                    padding: '0.5rem',\n                    fontSize: 10,\n                    maxHeight: 200,\n                    overflowY: 'auto',\n                    zIndex: 10\n                }}\n            >\n        {JSON.stringify(data.slice(0, 5), null, 2)}\n      </pre>\n            \n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={data} margin={{ top: 20, right: 10, bottom: 80, left: 10 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms =>\n                            new Date(ms).toLocaleTimeString('en-GB', {\n                                hour12: false, hour: '2-digit', minute: '2-digit',\n                            })\n                        }\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMinNum, yMaxNum]}\n                        ticks={yTicks}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n                    {sensors\n                        .filter(s => selectedSensors.includes(s.sensor_id))\n                        .map((s, i) => (\n                            <Line\n                                key={s.sensor_id}\n                                type=\"monotone\"\n                                dataKey={s.sensor_id}\n                                name={s.name}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                            />\n                        ))}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}