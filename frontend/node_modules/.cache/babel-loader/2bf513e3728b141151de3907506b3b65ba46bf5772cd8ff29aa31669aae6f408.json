{"ast":null,"code":"var _jsxFileName = \"/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js\",\n  _s = $RefreshSig$();\n/**\n * File: frontend/src/Components/ReactChartLine.jsx\n * Author: Connor Vardakis\n * Date: 4/2/25\n * Updated: 4/20/25\n * Description: ReactChartLine.jsx does get requests from backend to get chart and sensor data\n *              Also constructs all html for the data charts and js to make charts functional\n **/\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './Components/ReactChartsLine.css';\n\n// Custom tooltip with a finite‐check on the timestamp\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  // If tooltip is not active\n  if (!active || !(payload !== null && payload !== void 0 && payload.length)) return null;\n\n  // Generate Date label for given X value that is being hovered over\n  const date = new Date(label);\n  if (isNaN(date.getTime())) return null; // bail if invalid\n\n  // Format time label to be date and HH:MM\n  const timeLabel = date.toLocaleString('en-US', {\n    hour12: false,\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // HTML for ToolTip on graph\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#fff',\n      border: '1px solid #ccc',\n      padding: '0.5rem',\n      color: '#000'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: [\"Time: \", timeLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), payload.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: entry.color,\n        fontWeight: 'bold'\n      },\n      children: [entry.name, \": \", entry.value]\n    }, entry.dataKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n// Function to request and organize data to be used on graph\n_c = CustomTooltip;\nexport default function LineGraph() {\n  _s();\n  // Defining of multiple constants and useStates functions to set the values of these constants\n  // Constants for sensorData\n  const [rawData, setRawData] = useState([]);\n  const [chartData, setChartData] = useState([]);\n\n  // Sensor list & selection\n  const [sensors, setSensors] = useState([]);\n  const [selectedSensors, setSelectedSensors] = useState([]);\n\n  // Init flag to see if all sensors are loaded\n  const [initialized, setInitialized] = useState(false);\n\n  // Date/time filters\n  const [startDate, setStartDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  // Y‑axis controls\n  const [yStep, setYStep] = useState(5);\n  const [yMin, setYMin] = useState(0);\n  const [yMax, setYMax] = useState(0);\n  const apiUrl = 'https://utah-skyscope.deno.dev';\n\n  // Helper to enforce at least one sensor checked (User must have one active sensor in the selection box)\n  const toggleSensor = id => {\n    setSelectedSensors(prev => {\n      // Checks to see id is selected removes if not selected\n      // Keeps if it is the only sensor listed\n      if (prev.includes(id)) {\n        return prev.length === 1 ? prev : prev.filter(x => x !== id);\n      }\n      // Append to array if not already listed\n      return [...prev, id];\n    });\n  };\n\n  // On mount: round to 5 min, set filters, fetch sensor list\n  useEffect(() => {\n    const pad = n => String(n).padStart(2, '0');\n    const round5 = d => {\n      const ms = d.getTime(),\n        step = 5 * 60 * 1000;\n      return new Date(Math.floor(ms / step) * step);\n    };\n    const now = round5(new Date());\n    const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n    setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth() + 1)}-${pad(ago12.getDate())}`);\n    setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n    setEndDate(`${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}`);\n    setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n    fetch(`${apiUrl}/sensors`).then(r => r.json()).then(list => {\n      setSensors(list);\n      setSelectedSensors(list.map(s => s.sensor_id));\n      setInitialized(true);\n    }).catch(console.error);\n  }, [apiUrl]);\n\n  // Fetch rawData any time filters or selection change\n  useEffect(() => {\n    if (!initialized) return;\n    const buildUrl = () => {\n      const p = new URLSearchParams();\n      if (selectedSensors.length) p.set('sensor', selectedSensors.join(','));\n      if (startDate) p.set('startDate', startDate);\n      if (startTime) p.set('startTime', startTime);\n      if (endDate) p.set('endDate', endDate);\n      if (endTime) p.set('endTime', endTime);\n      return `${apiUrl}/sensorData/filter?${p.toString()}`;\n    };\n    const fetchData = () => {\n      fetch(buildUrl()).then(r => r.json()).then(rows => {\n        setRawData(rows);\n        // Pivot & normalize:\n        const bucket = {};\n        rows.forEach(({\n          sensor_id,\n          local,\n          reading\n        }) => {\n          const ts = new Date(local).getTime();\n          if (!bucket[ts]) bucket[ts] = {\n            timestamp: ts\n          };\n          bucket[ts][sensor_id] = parseFloat(reading);\n        });\n        let arr = Object.values(bucket).sort((a, b) => a.timestamp - b.timestamp);\n        // ensure each timestamp has a key for every selected sensor\n        arr = arr.map(pt => {\n          selectedSensors.forEach(id => {\n            if (!(id in pt)) pt[id] = null;\n          });\n          return pt;\n        });\n        setChartData(arr);\n\n        // Recompute Y domain\n        const all = rows.map(r => parseFloat(r.reading));\n        const maxR = all.length ? Math.max(...all) : 0;\n        const ceilMax = Math.ceil(maxR / yStep) * yStep;\n        setYMin(0);\n        setYMax(ceilMax);\n      }).catch(console.error);\n    };\n    fetchData();\n    // const iv = setInterval(fetchData, 60_000);\n    // return () => clearInterval(iv);\n  }, [apiUrl, initialized, startDate, startTime, endDate, endTime, selectedSensors, yStep]);\n\n  // Compute X & Y ticks\n  const startTs = new Date(`${startDate}T${startTime}`).getTime();\n  const endTs = new Date(`${endDate}T${endTime}`).getTime();\n  // X ticks every hour\n  const xTicks = [];\n  let firstHour = new Date(startTs);\n  firstHour.setMinutes(0, 0, 0);\n  if (firstHour.getTime() < startTs) firstHour = new Date(firstHour.getTime() + 3600000);\n  for (let t = firstHour.getTime(); t <= endTs; t += 3600000) {\n    xTicks.push(t);\n  }\n  // Y ticks by yStep\n  const yTicks = [];\n  for (let v = yMin; v <= yMax; v += yStep) {\n    yTicks.push(v);\n  }\n  const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menuContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Sensor Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sensor-options\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.5rem'\n          },\n          children: sensors.map(s => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSensors.includes(s.sensor_id),\n              onChange: () => toggleSensor(s.sensor_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), s.name]\n          }, s.sensor_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Date & Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: 24,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Start Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: startTime,\n                onChange: e => setStartTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"End Time\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                step: \"300\",\n                value: endTime,\n                onChange: e => setEndTime(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 24,\n            marginBottom: 8,\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Min\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMin,\n                onChange: e => setYMin(Number(e.target.value)),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Max\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yMax,\n                onChange: e => setYMax(Number(e.target.value)),\n                style: {\n                  width: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Y Step\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: yStep,\n                onChange: e => setYStep(Number(e.target.value)),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 1,\n                  children: \"1 unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2,\n                  children: \"2 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 5,\n                  children: \"5 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 10,\n                  children: \"10 units\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        margin: {\n          top: 20,\n          right: 10,\n          bottom: 80,\n          left: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          type: \"number\",\n          domain: [startTs, endTs],\n          ticks: xTicks,\n          tickFormatter: ms => new Date(ms).toLocaleTimeString('en-GB', {\n            hour12: false,\n            hour: '2-digit',\n            minute: '2-digit'\n          }),\n          label: {\n            value: 'Local Time',\n            position: 'bottom',\n            offset: 20,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [yMin, yMax],\n          ticks: yTicks,\n          label: {\n            value: 'mag/arcsec²',\n            angle: -90,\n            position: 'insideLeft',\n            dy: 50,\n            style: {\n              fontWeight: 'bold'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          verticalAlign: \"top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), selectedSensors.map((id, i) => {\n          const sensor = sensors.find(s => s.sensor_id === id);\n          return /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: id,\n            name: (sensor === null || sensor === void 0 ? void 0 : sensor.name) || id,\n            stroke: colors[i % colors.length],\n            dot: false,\n            connectNulls: true\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"2N2em5ZdB2sWbU+Ns8ZH+unlbyA=\");\n_c2 = LineGraph;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","date","Date","isNaN","getTime","timeLabel","toLocaleString","hour12","month","day","hour","minute","style","backgroundColor","border","padding","color","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","name","value","dataKey","_c","LineGraph","_s","rawData","setRawData","chartData","setChartData","sensors","setSensors","selectedSensors","setSelectedSensors","initialized","setInitialized","startDate","setStartDate","startTime","setStartTime","endDate","setEndDate","endTime","setEndTime","yStep","setYStep","yMin","setYMin","yMax","setYMax","apiUrl","toggleSensor","id","prev","includes","filter","x","pad","n","String","padStart","round5","d","ms","step","Math","floor","now","ago12","getFullYear","getMonth","getDate","getHours","getMinutes","fetch","then","r","json","list","s","sensor_id","catch","console","error","buildUrl","p","URLSearchParams","set","join","toString","fetchData","rows","bucket","forEach","local","reading","ts","timestamp","parseFloat","arr","Object","values","sort","a","b","pt","all","maxR","max","ceilMax","ceil","startTs","endTs","xTicks","firstHour","setMinutes","t","push","yTicks","v","colors","width","height","className","display","flexDirection","gap","type","checked","onChange","justifyContent","e","target","alignItems","Number","data","margin","top","right","bottom","left","strokeDasharray","domain","ticks","tickFormatter","toLocaleTimeString","position","offset","angle","dy","content","verticalAlign","i","sensor","find","stroke","dot","connectNulls","_c2","$RefreshReg$"],"sources":["/Users/connorvardakis/Documents/GitHub/ServerLightSensorCapstone/frontend/src/ReactChartsLine.js"],"sourcesContent":["/**\n * File: frontend/src/Components/ReactChartLine.jsx\n * Author: Connor Vardakis\n * Date: 4/2/25\n * Updated: 4/20/25\n * Description: ReactChartLine.jsx does get requests from backend to get chart and sensor data\n *              Also constructs all html for the data charts and js to make charts functional\n **/\n\nimport React, { useState, useEffect } from 'react';\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts';\nimport './Components/ReactChartsLine.css';\n\n// Custom tooltip with a finite‐check on the timestamp\nconst CustomTooltip = ({ active, payload, label }) => {\n    // If tooltip is not active\n    if (!active || !payload?.length) return null;\n\n    // Generate Date label for given X value that is being hovered over\n    const date = new Date(label);\n    if (isNaN(date.getTime())) return null;  // bail if invalid\n\n    // Format time label to be date and HH:MM\n    const timeLabel = date.toLocaleString('en-US', {\n        hour12: false,\n        month:  '2-digit',\n        day:    '2-digit',\n        hour:   '2-digit',\n        minute: '2-digit',\n    });\n\n    // HTML for ToolTip on graph\n    return (\n        <div style={{\n            backgroundColor: '#fff',\n            border: '1px solid #ccc',\n            padding: '0.5rem',\n            color: '#000'\n        }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>\n                Time: {timeLabel}\n            </div>\n            {/** load all the data fed back from server **/}\n            {payload.map(entry => (\n                <div\n                    key={entry.dataKey}\n                    style={{ color: entry.color, fontWeight: 'bold' }}\n                >\n                    {entry.name}: {entry.value}\n                </div>\n            ))}\n        </div>\n    );\n};\n\n// Function to request and organize data to be used on graph\nexport default function LineGraph() {\n    // Defining of multiple constants and useStates functions to set the values of these constants\n    // Constants for sensorData\n    const [rawData, setRawData]       = useState([]);\n    const [chartData, setChartData]   = useState([]);\n\n    // Sensor list & selection\n    const [sensors, setSensors]             = useState([]);\n    const [selectedSensors, setSelectedSensors] = useState([]);\n\n    // Init flag to see if all sensors are loaded\n    const [initialized, setInitialized]     = useState(false);\n\n    // Date/time filters\n    const [startDate, setStartDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endDate,   setEndDate]   = useState('');\n    const [endTime,   setEndTime]   = useState('');\n\n    // Y‑axis controls\n    const [yStep, setYStep] = useState(5);\n    const [yMin,  setYMin]  = useState(0);\n    const [yMax,  setYMax]  = useState(0);\n\n    const apiUrl = 'https://utah-skyscope.deno.dev';\n\n    // Helper to enforce at least one sensor checked (User must have one active sensor in the selection box)\n    const toggleSensor = id => {\n        setSelectedSensors(prev => {\n            // Checks to see id is selected removes if not selected\n            // Keeps if it is the only sensor listed\n            if (prev.includes(id)) {\n                return prev.length === 1 ? prev : prev.filter(x => x !== id);\n            }\n            // Append to array if not already listed\n            return [...prev, id];\n        });\n    };\n\n    // On mount: round to 5 min, set filters, fetch sensor list\n    useEffect(() => {\n        const pad = n => String(n).padStart(2, '0');\n        const round5 = d => {\n            const ms = d.getTime(), step = 5 * 60 * 1000;\n            return new Date(Math.floor(ms/step)*step);\n        };\n        const now = round5(new Date());\n        const ago12 = new Date(now.getTime() - 12 * 3600 * 1000);\n\n        setStartDate(`${ago12.getFullYear()}-${pad(ago12.getMonth()+1)}-${pad(ago12.getDate())}`);\n        setStartTime(`${pad(ago12.getHours())}:${pad(ago12.getMinutes())}`);\n        setEndDate(`${now.getFullYear()}-${pad(now.getMonth()+1)}-${pad(now.getDate())}`);\n        setEndTime(`${pad(now.getHours())}:${pad(now.getMinutes())}`);\n\n        fetch(`${apiUrl}/sensors`)\n            .then(r => r.json())\n            .then(list => {\n                setSensors(list);\n                setSelectedSensors(list.map(s => s.sensor_id));\n                setInitialized(true);\n            })\n            .catch(console.error);\n    }, [apiUrl]);\n\n    // Fetch rawData any time filters or selection change\n    useEffect(() => {\n        if (!initialized) return;\n\n        const buildUrl = () => {\n            const p = new URLSearchParams();\n            if (selectedSensors.length) p.set('sensor', selectedSensors.join(','));\n            if (startDate) p.set('startDate', startDate);\n            if (startTime) p.set('startTime', startTime);\n            if (endDate)   p.set('endDate', endDate);\n            if (endTime)   p.set('endTime', endTime);\n            return `${apiUrl}/sensorData/filter?${p.toString()}`;\n        };\n\n        const fetchData = () => {\n            fetch(buildUrl())\n                .then(r => r.json())\n                .then(rows => {\n                    setRawData(rows);\n                    // Pivot & normalize:\n                    const bucket = {};\n                    rows.forEach(({ sensor_id, local, reading }) => {\n                        const ts = new Date(local).getTime();\n                        if (!bucket[ts]) bucket[ts] = { timestamp: ts };\n                        bucket[ts][sensor_id] = parseFloat(reading);\n                    });\n                    let arr = Object.values(bucket).sort((a,b) => a.timestamp - b.timestamp);\n                    // ensure each timestamp has a key for every selected sensor\n                    arr = arr.map(pt => {\n                        selectedSensors.forEach(id => {\n                            if (!(id in pt)) pt[id] = null;\n                        });\n                        return pt;\n                    });\n                    setChartData(arr);\n\n                    // Recompute Y domain\n                    const all = rows.map(r => parseFloat(r.reading));\n                    const maxR = all.length ? Math.max(...all) : 0;\n                    const ceilMax = Math.ceil(maxR / yStep) * yStep;\n                    setYMin(0);\n                    setYMax(ceilMax);\n                })\n                .catch(console.error);\n        };\n\n        fetchData();\n        // const iv = setInterval(fetchData, 60_000);\n        // return () => clearInterval(iv);\n    }, [\n        apiUrl,\n        initialized,\n        startDate,\n        startTime,\n        endDate,\n        endTime,\n        selectedSensors,\n        yStep\n    ]);\n\n    // Compute X & Y ticks\n    const startTs = new Date(`${startDate}T${startTime}`).getTime();\n    const endTs   = new Date(`${endDate}T${endTime}`).getTime();\n    // X ticks every hour\n    const xTicks = [];\n    let firstHour = new Date(startTs);\n    firstHour.setMinutes(0,0,0);\n    if (firstHour.getTime() < startTs) firstHour = new Date(firstHour.getTime() + 3600_000);\n    for (let t = firstHour.getTime(); t <= endTs; t += 3600_000) {\n        xTicks.push(t);\n    }\n    // Y ticks by yStep\n    const yTicks = [];\n    for (let v = yMin; v <= yMax; v += yStep) {\n        yTicks.push(v);\n    }\n\n    const colors = ['#8884d8', '#82ca9d', '#ffc658', '#ff7300', '#a4de6c'];\n\n    return (\n        <div style={{ width: '100%', height: 600 }}>\n            {/* ─── Menus ────────────────────────────────────────────────────────── */}\n            <div className=\"menuContainer\">\n                {/* Sensor Selection */}\n                <section className=\"section1\">\n                    <h4>Sensor Selection</h4>\n                    <div\n                        className=\"sensor-options\"\n                        style={{display: 'flex', flexDirection: 'column', gap: '0.5rem'}}\n                    >\n                        {sensors.map(s => (\n                            <label key={s.sensor_id}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={selectedSensors.includes(s.sensor_id)}\n                                    onChange={() => toggleSensor(s.sensor_id)}\n                                />\n                                {s.name}\n                            </label>\n                        ))}\n                    </div>\n                </section>\n\n\n                {/* Date & Range */}\n                <section className=\"section2\">\n                    <h4>Date & Range</h4>\n                    <div style={{display: 'flex', gap: 24, justifyContent: 'center'}}>\n                        <div>\n                            <label>Start Date<br/>\n                                <input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)}/>\n                            </label><br/>\n                            <label>Start Time<br/>\n                                <input type=\"time\" step=\"300\" value={startTime}\n                                       onChange={e => setStartTime(e.target.value)}/>\n                            </label>\n                        </div>\n                        <div>\n                            <label>End Date<br/>\n                                <input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)}/>\n                            </label><br/>\n                            <label>End Time<br/>\n                                <input type=\"time\" step=\"300\" value={endTime}\n                                       onChange={e => setEndTime(e.target.value)}/>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Y‑Axis & CSV */}\n                <section className=\"section3\">\n                    <h4>Data Options</h4>\n                    <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 24,\n                        marginBottom: 8,\n                        justifyContent: 'center'\n                    }}>\n                        <div>\n                            <label>Y Min<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMin}\n                                    onChange={e => setYMin(Number(e.target.value))}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Max<br/>\n                                <input\n                                    type=\"number\"\n                                    value={yMax}\n                                    onChange={e => setYMax(Number(e.target.value))}\n                                    style={{width: 60}}\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label>Y Step<br/>\n                                <select value={yStep} onChange={e => setYStep(Number(e.target.value))}>\n                                    <option value={1}>1 unit</option>\n                                    <option value={2}>2 units</option>\n                                    <option value={5}>5 units</option>\n                                    <option value={10}>10 units</option>\n                                </select>\n                            </label>\n                        </div>\n                    </div>\n                </section>\n            </div>\n\n            {/* ─── Chart ────────────────────────────────────────────────────────── */}\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart\n                    data={chartData}\n                    margin={{top: 20, right: 10, bottom: 80, left: 10}}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                    <XAxis\n                        dataKey=\"timestamp\"\n                        type=\"number\"\n                        domain={[startTs, endTs]}\n                        ticks={xTicks}\n                        tickFormatter={ms => new Date(ms).toLocaleTimeString('en-GB', {\n                            hour12: false, hour: '2-digit', minute: '2-digit'\n                        })}\n                        label={{ value: 'Local Time', position: 'bottom', offset: 20, style: { fontWeight: 'bold' } }}\n                    />\n                    <YAxis\n                        domain={[yMin, yMax]}\n                        ticks={yTicks}\n                        label={{ value: 'mag/arcsec²', angle: -90, position: 'insideLeft', dy: 50, style: { fontWeight: 'bold' } }}\n                    />\n                    <Tooltip content={<CustomTooltip />} />\n                    <Legend verticalAlign=\"top\" />\n\n                    {selectedSensors.map((id, i) => {\n                        const sensor = sensors.find(s => s.sensor_id === id);\n                        return (\n                            <Line\n                                key={id}\n                                type=\"monotone\"\n                                dataKey={id}\n                                name={sensor?.name || id}\n                                stroke={colors[i % colors.length]}\n                                dot={false}\n                                connectNulls\n                            />\n                        );\n                    })}\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,MAAM,EACNC,mBAAmB,QAChB,UAAU;AACjB,OAAO,kCAAkC;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAClD;EACA,IAAI,CAACF,MAAM,IAAI,EAACC,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEE,MAAM,GAAE,OAAO,IAAI;;EAE5C;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,KAAK,CAAC;EAC5B,IAAII,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,CAAE;;EAEzC;EACA,MAAMC,SAAS,GAAGJ,IAAI,CAACK,cAAc,CAAC,OAAO,EAAE;IAC3CC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAG,SAAS;IACjBC,GAAG,EAAK,SAAS;IACjBC,IAAI,EAAI,SAAS;IACjBC,MAAM,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,oBACIhB,OAAA;IAAKiB,KAAK,EAAE;MACRC,eAAe,EAAE,MAAM;MACvBC,MAAM,EAAE,gBAAgB;MACxBC,OAAO,EAAE,QAAQ;MACjBC,KAAK,EAAE;IACX,CAAE;IAAAC,QAAA,gBACEtB,OAAA;MAAKiB,KAAK,EAAE;QAAEM,UAAU,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAF,QAAA,GAAC,QAC3C,EAACZ,SAAS;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EAELzB,OAAO,CAAC0B,GAAG,CAACC,KAAK,iBACd9B,OAAA;MAEIiB,KAAK,EAAE;QAAEI,KAAK,EAAES,KAAK,CAACT,KAAK;QAAEE,UAAU,EAAE;MAAO,CAAE;MAAAD,QAAA,GAEjDQ,KAAK,CAACC,IAAI,EAAC,IAAE,EAACD,KAAK,CAACE,KAAK;IAAA,GAHrBF,KAAK,CAACG,OAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;;AAED;AAAAM,EAAA,GAzCMjC,aAAa;AA0CnB,eAAe,SAASkC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAASjD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAKnD,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACoD,OAAO,EAAEC,UAAU,CAAC,GAAerD,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsD,eAAe,EAAEC,kBAAkB,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACwD,WAAW,EAAEC,cAAc,CAAC,GAAOzD,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4D,SAAS,EAAEC,YAAY,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8D,OAAO,EAAIC,UAAU,CAAC,GAAK/D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgE,OAAO,EAAIC,UAAU,CAAC,GAAKjE,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACkE,KAAK,EAAEC,QAAQ,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoE,IAAI,EAAGC,OAAO,CAAC,GAAIrE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACsE,IAAI,EAAGC,OAAO,CAAC,GAAIvE,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMwE,MAAM,GAAG,gCAAgC;;EAE/C;EACA,MAAMC,YAAY,GAAGC,EAAE,IAAI;IACvBnB,kBAAkB,CAACoB,IAAI,IAAI;MACvB;MACA;MACA,IAAIA,IAAI,CAACC,QAAQ,CAACF,EAAE,CAAC,EAAE;QACnB,OAAOC,IAAI,CAAC3D,MAAM,KAAK,CAAC,GAAG2D,IAAI,GAAGA,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,EAAE,CAAC;MAChE;MACA;MACA,OAAO,CAAC,GAAGC,IAAI,EAAED,EAAE,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;;EAED;EACAzE,SAAS,CAAC,MAAM;IACZ,MAAM8E,GAAG,GAAGC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC3C,MAAMC,MAAM,GAAGC,CAAC,IAAI;MAChB,MAAMC,EAAE,GAAGD,CAAC,CAAChE,OAAO,CAAC,CAAC;QAAEkE,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;MAC5C,OAAO,IAAIpE,IAAI,CAACqE,IAAI,CAACC,KAAK,CAACH,EAAE,GAACC,IAAI,CAAC,GAACA,IAAI,CAAC;IAC7C,CAAC;IACD,MAAMG,GAAG,GAAGN,MAAM,CAAC,IAAIjE,IAAI,CAAC,CAAC,CAAC;IAC9B,MAAMwE,KAAK,GAAG,IAAIxE,IAAI,CAACuE,GAAG,CAACrE,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;IAExDuC,YAAY,CAAC,GAAG+B,KAAK,CAACC,WAAW,CAAC,CAAC,IAAIZ,GAAG,CAACW,KAAK,CAACE,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,IAAIb,GAAG,CAACW,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IACzFhC,YAAY,CAAC,GAAGkB,GAAG,CAACW,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,IAAIf,GAAG,CAACW,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IACnEhC,UAAU,CAAC,GAAG0B,GAAG,CAACE,WAAW,CAAC,CAAC,IAAIZ,GAAG,CAACU,GAAG,CAACG,QAAQ,CAAC,CAAC,GAAC,CAAC,CAAC,IAAIb,GAAG,CAACU,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IACjF5B,UAAU,CAAC,GAAGc,GAAG,CAACU,GAAG,CAACK,QAAQ,CAAC,CAAC,CAAC,IAAIf,GAAG,CAACU,GAAG,CAACM,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;IAE7DC,KAAK,CAAC,GAAGxB,MAAM,UAAU,CAAC,CACrByB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACG,IAAI,IAAI;MACV/C,UAAU,CAAC+C,IAAI,CAAC;MAChB7C,kBAAkB,CAAC6C,IAAI,CAAC5D,GAAG,CAAC6D,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;MAC9C7C,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CACD8C,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAC7B,CAAC,EAAE,CAACjC,MAAM,CAAC,CAAC;;EAEZ;EACAvE,SAAS,CAAC,MAAM;IACZ,IAAI,CAACuD,WAAW,EAAE;IAElB,MAAMkD,QAAQ,GAAGA,CAAA,KAAM;MACnB,MAAMC,CAAC,GAAG,IAAIC,eAAe,CAAC,CAAC;MAC/B,IAAItD,eAAe,CAACtC,MAAM,EAAE2F,CAAC,CAACE,GAAG,CAAC,QAAQ,EAAEvD,eAAe,CAACwD,IAAI,CAAC,GAAG,CAAC,CAAC;MACtE,IAAIpD,SAAS,EAAEiD,CAAC,CAACE,GAAG,CAAC,WAAW,EAAEnD,SAAS,CAAC;MAC5C,IAAIE,SAAS,EAAE+C,CAAC,CAACE,GAAG,CAAC,WAAW,EAAEjD,SAAS,CAAC;MAC5C,IAAIE,OAAO,EAAI6C,CAAC,CAACE,GAAG,CAAC,SAAS,EAAE/C,OAAO,CAAC;MACxC,IAAIE,OAAO,EAAI2C,CAAC,CAACE,GAAG,CAAC,SAAS,EAAE7C,OAAO,CAAC;MACxC,OAAO,GAAGQ,MAAM,sBAAsBmC,CAAC,CAACI,QAAQ,CAAC,CAAC,EAAE;IACxD,CAAC;IAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;MACpBhB,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC,CACZT,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnBF,IAAI,CAACgB,IAAI,IAAI;QACVhE,UAAU,CAACgE,IAAI,CAAC;QAChB;QACA,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjBD,IAAI,CAACE,OAAO,CAAC,CAAC;UAAEb,SAAS;UAAEc,KAAK;UAAEC;QAAQ,CAAC,KAAK;UAC5C,MAAMC,EAAE,GAAG,IAAIpG,IAAI,CAACkG,KAAK,CAAC,CAAChG,OAAO,CAAC,CAAC;UACpC,IAAI,CAAC8F,MAAM,CAACI,EAAE,CAAC,EAAEJ,MAAM,CAACI,EAAE,CAAC,GAAG;YAAEC,SAAS,EAAED;UAAG,CAAC;UAC/CJ,MAAM,CAACI,EAAE,CAAC,CAAChB,SAAS,CAAC,GAAGkB,UAAU,CAACH,OAAO,CAAC;QAC/C,CAAC,CAAC;QACF,IAAII,GAAG,GAAGC,MAAM,CAACC,MAAM,CAACT,MAAM,CAAC,CAACU,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACN,SAAS,GAAGO,CAAC,CAACP,SAAS,CAAC;QACxE;QACAE,GAAG,GAAGA,GAAG,CAACjF,GAAG,CAACuF,EAAE,IAAI;UAChBzE,eAAe,CAAC6D,OAAO,CAACzC,EAAE,IAAI;YAC1B,IAAI,EAAEA,EAAE,IAAIqD,EAAE,CAAC,EAAEA,EAAE,CAACrD,EAAE,CAAC,GAAG,IAAI;UAClC,CAAC,CAAC;UACF,OAAOqD,EAAE;QACb,CAAC,CAAC;QACF5E,YAAY,CAACsE,GAAG,CAAC;;QAEjB;QACA,MAAMO,GAAG,GAAGf,IAAI,CAACzE,GAAG,CAAC0D,CAAC,IAAIsB,UAAU,CAACtB,CAAC,CAACmB,OAAO,CAAC,CAAC;QAChD,MAAMY,IAAI,GAAGD,GAAG,CAAChH,MAAM,GAAGuE,IAAI,CAAC2C,GAAG,CAAC,GAAGF,GAAG,CAAC,GAAG,CAAC;QAC9C,MAAMG,OAAO,GAAG5C,IAAI,CAAC6C,IAAI,CAACH,IAAI,GAAG/D,KAAK,CAAC,GAAGA,KAAK;QAC/CG,OAAO,CAAC,CAAC,CAAC;QACVE,OAAO,CAAC4D,OAAO,CAAC;MACpB,CAAC,CAAC,CACD5B,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IAC7B,CAAC;IAEDO,SAAS,CAAC,CAAC;IACX;IACA;EACJ,CAAC,EAAE,CACCxC,MAAM,EACNhB,WAAW,EACXE,SAAS,EACTE,SAAS,EACTE,OAAO,EACPE,OAAO,EACPV,eAAe,EACfY,KAAK,CACR,CAAC;;EAEF;EACA,MAAMmE,OAAO,GAAG,IAAInH,IAAI,CAAC,GAAGwC,SAAS,IAAIE,SAAS,EAAE,CAAC,CAACxC,OAAO,CAAC,CAAC;EAC/D,MAAMkH,KAAK,GAAK,IAAIpH,IAAI,CAAC,GAAG4C,OAAO,IAAIE,OAAO,EAAE,CAAC,CAAC5C,OAAO,CAAC,CAAC;EAC3D;EACA,MAAMmH,MAAM,GAAG,EAAE;EACjB,IAAIC,SAAS,GAAG,IAAItH,IAAI,CAACmH,OAAO,CAAC;EACjCG,SAAS,CAACC,UAAU,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAC3B,IAAID,SAAS,CAACpH,OAAO,CAAC,CAAC,GAAGiH,OAAO,EAAEG,SAAS,GAAG,IAAItH,IAAI,CAACsH,SAAS,CAACpH,OAAO,CAAC,CAAC,GAAG,OAAQ,CAAC;EACvF,KAAK,IAAIsH,CAAC,GAAGF,SAAS,CAACpH,OAAO,CAAC,CAAC,EAAEsH,CAAC,IAAIJ,KAAK,EAAEI,CAAC,IAAI,OAAQ,EAAE;IACzDH,MAAM,CAACI,IAAI,CAACD,CAAC,CAAC;EAClB;EACA;EACA,MAAME,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAGzE,IAAI,EAAEyE,CAAC,IAAIvE,IAAI,EAAEuE,CAAC,IAAI3E,KAAK,EAAE;IACtC0E,MAAM,CAACD,IAAI,CAACE,CAAC,CAAC;EAClB;EAEA,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAEtE,oBACInI,OAAA;IAAKiB,KAAK,EAAE;MAAEmH,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAA/G,QAAA,gBAEvCtB,OAAA;MAAKsI,SAAS,EAAC,eAAe;MAAAhH,QAAA,gBAE1BtB,OAAA;QAASsI,SAAS,EAAC,UAAU;QAAAhH,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,EAAI;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB5B,OAAA;UACIsI,SAAS,EAAC,gBAAgB;UAC1BrH,KAAK,EAAE;YAACsH,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAQ,CAAE;UAAAnH,QAAA,EAEhEmB,OAAO,CAACZ,GAAG,CAAC6D,CAAC,iBACV1F,OAAA;YAAAsB,QAAA,gBACItB,OAAA;cACI0I,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEhG,eAAe,CAACsB,QAAQ,CAACyB,CAAC,CAACC,SAAS,CAAE;cAC/CiD,QAAQ,EAAEA,CAAA,KAAM9E,YAAY,CAAC4B,CAAC,CAACC,SAAS;YAAE;cAAAlE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,EACD8D,CAAC,CAAC3D,IAAI;UAAA,GANC2D,CAAC,CAACC,SAAS;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOhB,CACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAIV5B,OAAA;QAASsI,SAAS,EAAC,UAAU;QAAAhH,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5B,OAAA;UAAKiB,KAAK,EAAE;YAACsH,OAAO,EAAE,MAAM;YAAEE,GAAG,EAAE,EAAE;YAAEI,cAAc,EAAE;UAAQ,CAAE;UAAAvH,QAAA,gBAC7DtB,OAAA;YAAAsB,QAAA,gBACItB,OAAA;cAAAsB,QAAA,GAAO,YAAU,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClB5B,OAAA;gBAAO0I,IAAI,EAAC,MAAM;gBAAC1G,KAAK,EAAEe,SAAU;gBAAC6F,QAAQ,EAAEE,CAAC,IAAI9F,YAAY,CAAC8F,CAAC,CAACC,MAAM,CAAC/G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChF,CAAC,eAAA5B,OAAA;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb5B,OAAA;cAAAsB,QAAA,GAAO,YAAU,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClB5B,OAAA;gBAAO0I,IAAI,EAAC,MAAM;gBAAC/D,IAAI,EAAC,KAAK;gBAAC3C,KAAK,EAAEiB,SAAU;gBACxC2F,QAAQ,EAAEE,CAAC,IAAI5F,YAAY,CAAC4F,CAAC,CAACC,MAAM,CAAC/G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACN5B,OAAA;YAAAsB,QAAA,gBACItB,OAAA;cAAAsB,QAAA,GAAO,UAAQ,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB5B,OAAA;gBAAO0I,IAAI,EAAC,MAAM;gBAAC1G,KAAK,EAAEmB,OAAQ;gBAACyF,QAAQ,EAAEE,CAAC,IAAI1F,UAAU,CAAC0F,CAAC,CAACC,MAAM,CAAC/G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5E,CAAC,eAAA5B,OAAA;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACb5B,OAAA;cAAAsB,QAAA,GAAO,UAAQ,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB5B,OAAA;gBAAO0I,IAAI,EAAC,MAAM;gBAAC/D,IAAI,EAAC,KAAK;gBAAC3C,KAAK,EAAEqB,OAAQ;gBACtCuF,QAAQ,EAAEE,CAAC,IAAIxF,UAAU,CAACwF,CAAC,CAACC,MAAM,CAAC/G,KAAK;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGV5B,OAAA;QAASsI,SAAS,EAAC,UAAU;QAAAhH,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5B,OAAA;UAAKiB,KAAK,EAAE;YACRsH,OAAO,EAAE,MAAM;YACfS,UAAU,EAAE,QAAQ;YACpBP,GAAG,EAAE,EAAE;YACPjH,YAAY,EAAE,CAAC;YACfqH,cAAc,EAAE;UACpB,CAAE;UAAAvH,QAAA,gBACEtB,OAAA;YAAAsB,QAAA,eACItB,OAAA;cAAAsB,QAAA,GAAO,OAAK,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb5B,OAAA;gBACI0I,IAAI,EAAC,QAAQ;gBACb1G,KAAK,EAAEyB,IAAK;gBACZmF,QAAQ,EAAEE,CAAC,IAAIpF,OAAO,CAACuF,MAAM,CAACH,CAAC,CAACC,MAAM,CAAC/G,KAAK,CAAC,CAAE;gBAC/Cf,KAAK,EAAE;kBAACmH,KAAK,EAAE;gBAAE;cAAE;gBAAA3G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACN5B,OAAA;YAAAsB,QAAA,eACItB,OAAA;cAAAsB,QAAA,GAAO,OAAK,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb5B,OAAA;gBACI0I,IAAI,EAAC,QAAQ;gBACb1G,KAAK,EAAE2B,IAAK;gBACZiF,QAAQ,EAAEE,CAAC,IAAIlF,OAAO,CAACqF,MAAM,CAACH,CAAC,CAACC,MAAM,CAAC/G,KAAK,CAAC,CAAE;gBAC/Cf,KAAK,EAAE;kBAACmH,KAAK,EAAE;gBAAE;cAAE;gBAAA3G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC,eACN5B,OAAA;YAAAsB,QAAA,eACItB,OAAA;cAAAsB,QAAA,GAAO,QAAM,eAAAtB,OAAA;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACd5B,OAAA;gBAAQgC,KAAK,EAAEuB,KAAM;gBAACqF,QAAQ,EAAEE,CAAC,IAAItF,QAAQ,CAACyF,MAAM,CAACH,CAAC,CAACC,MAAM,CAAC/G,KAAK,CAAC,CAAE;gBAAAV,QAAA,gBAClEtB,OAAA;kBAAQgC,KAAK,EAAE,CAAE;kBAAAV,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACjC5B,OAAA;kBAAQgC,KAAK,EAAE,CAAE;kBAAAV,QAAA,EAAC;gBAAO;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC5B,OAAA;kBAAQgC,KAAK,EAAE,CAAE;kBAAAV,QAAA,EAAC;gBAAO;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClC5B,OAAA;kBAAQgC,KAAK,EAAE,EAAG;kBAAAV,QAAA,EAAC;gBAAQ;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAGN5B,OAAA,CAACF,mBAAmB;MAACsI,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAA/G,QAAA,eAC3CtB,OAAA,CAACT,SAAS;QACN2J,IAAI,EAAE3G,SAAU;QAChB4G,MAAM,EAAE;UAACC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAE,CAAE;QAAAjI,QAAA,gBAEnDtB,OAAA,CAACL,aAAa;UAAC6J,eAAe,EAAC;QAAK;UAAA/H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtC5B,OAAA,CAACP,KAAK;UACFwC,OAAO,EAAC,WAAW;UACnByG,IAAI,EAAC,QAAQ;UACbe,MAAM,EAAE,CAAC/B,OAAO,EAAEC,KAAK,CAAE;UACzB+B,KAAK,EAAE9B,MAAO;UACd+B,aAAa,EAAEjF,EAAE,IAAI,IAAInE,IAAI,CAACmE,EAAE,CAAC,CAACkF,kBAAkB,CAAC,OAAO,EAAE;YAC1DhJ,MAAM,EAAE,KAAK;YAAEG,IAAI,EAAE,SAAS;YAAEC,MAAM,EAAE;UAC5C,CAAC,CAAE;UACHZ,KAAK,EAAE;YAAE4B,KAAK,EAAE,YAAY;YAAE6H,QAAQ,EAAE,QAAQ;YAAEC,MAAM,EAAE,EAAE;YAAE7I,KAAK,EAAE;cAAEM,UAAU,EAAE;YAAO;UAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,eACF5B,OAAA,CAACN,KAAK;UACF+J,MAAM,EAAE,CAAChG,IAAI,EAAEE,IAAI,CAAE;UACrB+F,KAAK,EAAEzB,MAAO;UACd7H,KAAK,EAAE;YAAE4B,KAAK,EAAE,aAAa;YAAE+H,KAAK,EAAE,CAAC,EAAE;YAAEF,QAAQ,EAAE,YAAY;YAAEG,EAAE,EAAE,EAAE;YAAE/I,KAAK,EAAE;cAAEM,UAAU,EAAE;YAAO;UAAE;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9G,CAAC,eACF5B,OAAA,CAACJ,OAAO;UAACqK,OAAO,eAAEjK,OAAA,CAACC,aAAa;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC5B,OAAA,CAACH,MAAM;UAACqK,aAAa,EAAC;QAAK;UAAAzI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAE7Be,eAAe,CAACd,GAAG,CAAC,CAACkC,EAAE,EAAEoG,CAAC,KAAK;UAC5B,MAAMC,MAAM,GAAG3H,OAAO,CAAC4H,IAAI,CAAC3E,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK5B,EAAE,CAAC;UACpD,oBACI/D,OAAA,CAACR,IAAI;YAEDkJ,IAAI,EAAC,UAAU;YACfzG,OAAO,EAAE8B,EAAG;YACZhC,IAAI,EAAE,CAAAqI,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAErI,IAAI,KAAIgC,EAAG;YACzBuG,MAAM,EAAEnC,MAAM,CAACgC,CAAC,GAAGhC,MAAM,CAAC9H,MAAM,CAAE;YAClCkK,GAAG,EAAE,KAAM;YACXC,YAAY;UAAA,GANPzG,EAAE;YAAAtC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOV,CAAC;QAEV,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd;AAACQ,EAAA,CAxRuBD,SAAS;AAAAsI,GAAA,GAATtI,SAAS;AAAA,IAAAD,EAAA,EAAAuI,GAAA;AAAAC,YAAA,CAAAxI,EAAA;AAAAwI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}